{"version":3,"sources":["components/CurrentWeather/CurrentWeather.module.css","store/dataSlice.js","store/currWeatherSlice.js","components/CurrentWeather/LocIcon.jsx","components/CurrentWeather/CurrentWeather.jsx","store/graphSlice.js","components/TypeBtns/TypeBtns.js","components/WeatherGraphic/WindArrow.js","components/WeatherGraphic/LabelAxis.js","hooks/useGraphics.js","components/WeatherGraphic/LabelComponent.js","components/WeatherGraphic/WeatherGraphic.jsx","components/DaysBtns/DaysBtns.js","App.js","store/index.js","index.js"],"names":["module","exports","fetchWeather","createAsyncThunk","pos","a","rejectWithValue","lat","lon","url","fetch","response","ok","Error","json","message","fetchLocation","word","dataSlice","createSlice","name","initialState","data","listFindLocations","statusFetchLocation","error","statusFetchWeather","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","actions","setStatusFind","currWeatherSlice","isMetric","isVisFindLoc","isGeo","currData","setCurrData","curr","current","getDataObj","last_updated","toggVisFindLoc","setForecastData","fCast","time","updTimeStamp","forecast","forecastday","forEach","ar","hour","ar1","Date","getTime","setCurrDayData","currDay","setMetric","setGeo","isDay","formatOptions","weekday","undefined","minute","temp_c","Math","round","avgtemp_c","temp_f","avgtemp_f","icon","condition","precip_mm","totalprecip_mm","humidity","avghumidity","wind_kph","maxwind_kph","wind_mph","maxwind_mph","country","location","text","updTime","Intl","DateTimeFormat","format","LocIcon","size","fill","xmlns","style","margin","width","height","viewBox","d","CurrentWeather","useSelector","currWeather","dispatch","useDispatch","hideFindLoc","e","document","querySelector","path","find","el","classList","contains","useEffect","addEventListener","className","cl","leftCol","src","alt","temp","btns","disabled","onClick","btn","active","vertLine","other","rightCol","findWrapper","findInput","onChange","target","value","length","placeholder","type","findList","map","loc","findItem","ev","onClickHandler","id","onMouseUp","btnFindLoc","graphSlice","dataXY","typeY","tickValues","slideGraphicsPx","minY","getXY","push","wind_degree","getArrHours","currHour","getHours","ind","i","j","setCurrUpdTime","setType","setSlideGraphics","currTime","lastUpdTime","res","getMinY","reduce","min","cur","resetGraphicsStates","getVisualY","TypeBtns","graphics","handleClick","parentElement","querySelectorAll","b","add","includes","WindArrow","x","dx","y","datum","isVisible","version","enableBackground","transformOrigin","transform","points","LabelAxis","props","fontSize","UseGraphics","addPostfix","hourX","chartsStyles","VictoryAxis","tickLabels","fontFamily","axis","stroke","VictoryArea","strokeWidth","labels","fontWeight","cursor","LabelComponent","dy","useGraphics","vectorEffect","setMinutes","WeatherGraphic","padding","bottom","top","left","right","domainPadding","containerComponent","transition","responsive","crossAxis","tickFormat","t","tickLabelComponent","dataComponent","labelComponent","y0","interpolation","DaysBtns","addBtns","day","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","getDate","btnDay","date","nums","num","roundNums","closest","remove","handlerClick","App","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","err","enableHighAccuracy","timeout","maximumAge","color","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.7562d5a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"CurrentWeather_current__3eoIk\",\"leftCol\":\"CurrentWeather_leftCol__3OQxZ\",\"temp\":\"CurrentWeather_temp__3W1Vd\",\"btns\":\"CurrentWeather_btns__AZ7d7\",\"btn\":\"CurrentWeather_btn__Oh3m-\",\"active\":\"CurrentWeather_active__tCyXI\",\"vertLine\":\"CurrentWeather_vertLine__3lqeN\",\"other\":\"CurrentWeather_other__quPtP\",\"rightCol\":\"CurrentWeather_rightCol__t55u-\",\"btnFindLoc\":\"CurrentWeather_btnFindLoc__1LIEj\",\"location\":\"CurrentWeather_location__pkGnp\",\"findInput\":\"CurrentWeather_findInput__3L8z8\",\"findWrapper\":\"CurrentWeather_findWrapper__1a7QJ\",\"findList\":\"CurrentWeather_findList__QGo5A\",\"findItem\":\"CurrentWeather_findItem__aoEil\"};","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst fetchWeather = createAsyncThunk(\r\n\t\t'data/fetchWeather',\r\n\t\tasync function (pos, {rejectWithValue}) {\r\n\t\t\tconst [lat, lon] = pos\r\n\t\t\t// const url = `http://api.weatherapi.com/v1/forecast.json?key=b8d348df879e486ca0f172620210610&q=48.86,2.35&days=8`\r\n\t\t\tconst url = `https://api.weatherapi.com/v1/forecast.json?key=b8d348df879e486ca0f172620210610&q=${lat},${lon}&days=8&lang=ru`\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url)\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Server Error!')\r\n\t\t\t\t}\r\n\t\t\t\treturn await response.json()\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn rejectWithValue(e.message)\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nconst fetchLocation = createAsyncThunk(\r\n\t\t'data/fetchLocation',\r\n\t\tasync function (word, {rejectWithValue}) {\r\n\t\t\tconst url = `https://api.weatherapi.com/v1/search.json?key=b8d348df879e486ca0f172620210610&q=${word}`\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url)\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Server Error!')\r\n\t\t\t\t}\r\n\t\t\t\treturn await response.json()\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn rejectWithValue(e.message)\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nconst dataSlice = createSlice({\r\n\tname: 'data',\r\n\tinitialState: {\r\n\t\tdata: {},\r\n\t\tlistFindLocations: [],\r\n\t\tstatusFetchLocation: null,\r\n\t\terror: null,\r\n\t\tstatusFetchWeather: null,\r\n\t},\r\n\treducers: {\r\n\r\n\t},\r\n\textraReducers: {\r\n\t\t[fetchWeather.pending]: (state, action) => {\r\n\t\t\tstate.statusFetchWeather = 'loading'\r\n\t\t},\r\n\t\t[fetchWeather.fulfilled]: (state, action) => {\r\n\t\t\tstate.data = action.payload\r\n\t\t\tstate.statusFetchWeather = 'ok'\r\n\t\t},\r\n\t\t[fetchWeather.rejected]: (state, action) => {\r\n\t\t\tstate.error = action.payload\r\n\t\t\tstate.statusFetchWeather = 'rejected'\r\n\t\t},\r\n\t\t[fetchLocation.pending]: (state, action) => {\r\n\t\t\tstate.statusFetchLocation = 'loading'\r\n\t\t},\r\n\t\t[fetchLocation.fulfilled]: (state, action) => {\r\n\t\t\tstate.listFindLocations = action.payload\r\n\t\t\tstate.statusFetchLocation = 'ok'\r\n\t\t},\r\n\t\t[fetchLocation.rejected]: (state, action) => {\r\n\t\t\tstate.error = action.payload\r\n\t\t\tstate.statusFetchLocation = 'rejected'\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const {setStatusFind} = dataSlice.actions\r\nexport {fetchWeather, fetchLocation}\r\nexport default dataSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst currWeatherSlice = createSlice({\r\n\t\t\tname: 'currWeather',\r\n\t\t\tinitialState: {\r\n\t\t\t\tisMetric: true,\r\n\t\t\t\tisVisFindLoc: false,\r\n\t\t\t\tisGeo: false,\r\n\t\t\t\tcurrData: {},\r\n\t\t\t},\r\n\t\t\treducers: {\r\n\t\t\t\tsetCurrData(state, action) {\r\n\t\t\t\t\tconst {data} = action.payload\r\n\t\t\t\t\tconst curr = data.current;\r\n\t\t\t\t\tstate.currData = getDataObj(data, curr, curr.last_updated)\r\n\t\t\t\t},\r\n\r\n\t\t\t\ttoggVisFindLoc(state, action) {\r\n\t\t\t\t\tif (typeof action.payload === \"boolean\") {\r\n\t\t\t\t\t\tstate.isVisFindLoc = action.payload\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstate.isVisFindLoc = !state.isVisFindLoc\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetForecastData(state, action) {\r\n\t\t\t\t\tconst [time, data] = action.payload\r\n\t\t\t\t\tif (state.currData.updTimeStamp === time) return\r\n\r\n\t\t\t\t\tlet fCast\r\n\t\t\t\t\tdata.forecast.forecastday.forEach((ar) => ar.hour.forEach((ar1) => {\r\n\t\t\t\t\t\tif (new Date(ar1.time).getTime() === time) {\r\n\t\t\t\t\t\t\tfCast = ar1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tstate.currData = getDataObj(data, fCast, fCast.time)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetCurrDayData(state, action) {\r\n\t\t\t\t\tconst [time, currDay, data] = action.payload\r\n\t\t\t\t\tif (state.currData.updTimeStamp === time) return\r\n\t\t\t\t\tstate.currData = getDataObj(data, currDay, time, true)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMetric(state, action) {\r\n\t\t\t\t\tstate.isMetric = action.payload\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetGeo(state, action) {\r\n\t\t\t\t\tstate.isGeo = action.payload\r\n\t\t\t\t},\r\n\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nfunction getDataObj(data, curr, last_updated, isDay = false) {\r\n\r\n\tconst formatOptions = {\r\n\t\tweekday: 'long',\r\n\t\thour: isDay ? undefined : 'numeric',\r\n\t\tminute: isDay ? undefined : 'numeric'\r\n\t}\r\n\r\n\treturn {\r\n\t\ttemp_c: Math.round(isDay ? curr.avgtemp_c : curr.temp_c),\r\n\t\ttemp_f: Math.round(isDay ? curr.avgtemp_f : curr.temp_f),\r\n\t\ticon: curr.condition.icon,\r\n\t\tprecip_mm: isDay ? curr.totalprecip_mm : curr.precip_mm,\r\n\t\thumidity: isDay ? curr.avghumidity : curr.humidity,\r\n\t\twind_kph: Math.round(isDay ? curr.maxwind_kph : curr.wind_kph),\r\n\t\twind_mph: Math.round(isDay ? curr.maxwind_mph : curr.wind_mph),\r\n\t\tcountry: data.location.country,\r\n\t\tname: data.location.name,\r\n\t\ttext: curr.condition.text,\r\n\t\tupdTime: new Intl.DateTimeFormat('ru-RU', formatOptions)\r\n\t\t\t\t.format(new Date(last_updated)),\r\n\t\tupdTimeStamp: new Date(last_updated).getTime()\r\n\t}\r\n}\r\n\r\nexport const {\r\n\tsetGeo,\r\n\ttoggVisFindLoc,\r\n\tsetCurrData,\r\n\tsetForecastData,\r\n\tsetMetric,\r\n\tsetCurrDayData\r\n} = currWeatherSlice.actions\r\nexport default currWeatherSlice.reducer","import React from 'react';\r\n\r\nconst LocIcon = ({size = 24, fill = '#fbbc04'}) => {\r\n\r\n\treturn (\r\n\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tstyle={{margin: '0 10px 0 0'}}\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\">\r\n\t\t\t\t<path fill={fill}\r\n\t\t\t\t\t\t\td=\"M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 11c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z\"/>\r\n\t\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default LocIcon;\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport cl from './CurrentWeather.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrData, setGeo, setMetric, toggVisFindLoc} from \"../../store/currWeatherSlice\";\r\nimport {fetchLocation, fetchWeather} from \"../../store/dataSlice\";\r\nimport LocIcon from \"./LocIcon\";\r\n\r\nconst CurrentWeather = () => {\r\n\r\n\tconst {isGeo ,isVisFindLoc, isMetric, currData}\r\n\t\t\t= useSelector(state => state.currWeather)\r\n\tconst {data, listFindLocations, error, statusFetchLocation}\r\n\t\t\t= useSelector(state => state.data)\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst {\r\n\t\ttemp_c, temp_f, icon, precip_mm, humidity, wind_kph,\r\n\t\twind_mph, country, name, text, updTime\r\n\t} = currData\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setCurrData({data}))\r\n\t}, [data])\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('click', hideFindLoc)\r\n\t}, [])\r\n\r\n\tfunction onChangeHandler(word) {\r\n\t\tif (word.length > 2) {\r\n\t\t\tdispatch(fetchLocation(word))\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideFindLoc(e) {\r\n\t\tconst findWrap = document.querySelector('.js-findWrapper')\r\n\r\n\t\tif (findWrap) {\r\n\t\t\tif (!e.path.find(el => el.classList ? el.classList.contains('js-findWrapper') : null)) {\r\n\t\t\t\tdispatch(toggVisFindLoc(false))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onClickHandler(ev, lat, lon) {\r\n\t\tdispatch(fetchWeather([lat, lon]))\r\n\t\tev.target.value = ''\r\n\t\tdispatch(toggVisFindLoc(false))\r\n\t\tdispatch(setGeo(false))\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={cl.current}>\r\n\t\t\t\t<div className={cl.leftCol}>\r\n\t\t\t\t\t<img width={64} height={64} src={icon} alt=\"weather icon\"/>\r\n\t\t\t\t\t<span className={cl.temp}>{isMetric ? temp_c : temp_f}</span>\r\n\t\t\t\t\t<div className={cl.btns}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={isMetric}\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setMetric(true))}\r\n\t\t\t\t\t\t\t\tclassName={`${cl.btn} ${isMetric ? cl.active : ''}`}>\r\n\t\t\t\t\t\t\t&deg;C\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span className={cl.vertLine}>|</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={!isMetric}\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setMetric(false))}\r\n\t\t\t\t\t\t\t\tclassName={`${cl.btn} ${!isMetric ? cl.active : ''}`}>\r\n\t\t\t\t\t\t\t&deg;F\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul className={cl.other}>\r\n\t\t\t\t\t\t<li>Осадки: {precip_mm} мм</li>\r\n\t\t\t\t\t\t<li>Влажность: {humidity}%</li>\r\n\t\t\t\t\t\t<li>Ветер: {isMetric ? `${wind_kph} км/ч` : `${wind_mph} ми/ч`}</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={cl.rightCol}>\r\n\t\t\t\t\t{isVisFindLoc && !error\r\n\t\t\t\t\t\t\t? <div className={`${cl.findWrapper} js-findWrapper`}>\r\n\t\t\t\t\t\t\t\t<input className={cl.findInput}\r\n\t\t\t\t\t\t\t\t\t\t\t onChange={e => onChangeHandler(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t placeholder={'Город (от 3 символов) ...'}\r\n\t\t\t\t\t\t\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t name=\"country-name\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ul className={cl.findList}>\r\n\t\t\t\t\t\t\t\t\t{listFindLocations.length > 0 && statusFetchLocation === 'ok' &&\r\n\t\t\t\t\t\t\t\t\tlistFindLocations.map(loc => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li className={cl.findItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(ev) => onClickHandler(ev, loc.lat, loc.lon)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={loc.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loc.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t{listFindLocations.length === 0 && statusFetchLocation === 'ok' &&\r\n\t\t\t\t\t\t\t\t\t<li className={cl.findItem}>Не найдено</li>}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t: <button\r\n\t\t\t\t\t\t\t\t\tonMouseUp={() => dispatch(toggVisFindLoc(true))}\r\n\t\t\t\t\t\t\t\t\tclassName={cl.btnFindLoc}>\r\n\t\t\t\t\t\t\t\t{isGeo && <LocIcon size={20}/>}\r\n\t\t\t\t\t\t\t\t<h1 className={cl.location}>{country}, {name}</h1>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{updTime}</span>\r\n\t\t\t\t\t<span>{text}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CurrentWeather;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst defStates = {\r\n\tdataXY: [],\r\n\ttypeY: 'temp_c',\r\n\ttickValues: [],\r\n\tlast_updated: null,\r\n\tslideGraphicsPx: null,\r\n\tminY: -1,\r\n}\r\n\r\nconst graphSlice = createSlice({\r\n\tname: 'graph',\r\n\tinitialState: defStates,\r\n\treducers: {\r\n\r\n\t\tgetXY(state, action) {\r\n\t\t\tstate.dataXY.length = 0\r\n\t\t\tfor (const day of action.payload.data.forecast.forecastday) {\r\n\t\t\t\tday.hour.forEach((hour) => {\r\n\t\t\t\t\tstate.dataXY.push({\r\n\t\t\t\t\t\ttime: new Date(hour.time).getTime(),\r\n\t\t\t\t\t\ttemp_c: Math.round(hour.temp_c),\r\n\t\t\t\t\t\ttemp_f: Math.round(hour.temp_f),\r\n\t\t\t\t\t\thumidity: Math.round(hour.humidity),\r\n\t\t\t\t\t\twind_kph: Math.round(hour.wind_kph),\r\n\t\t\t\t\t\twind_mph: Math.round(hour.wind_mph),\r\n\t\t\t\t\t\twind_degree: hour.wind_degree,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetArrHours(state, action) {\r\n\t\t\tstate.tickValues.length = 0\r\n\t\t\tlet currHour = new Date(state.last_updated).getHours()\r\n\t\t\t++currHour\r\n\r\n\t\t\tstate.dataXY.forEach((ar, ind) => {\r\n\t\t\t\tfor (let i = currHour; i < 75; i += 3) {\r\n\t\t\t\t\tif (ind === i) state.tickValues.push(ar.time)\r\n\t\t\t\t\tfor (let j = currHour; j >= 0; j -= 3) {\r\n\t\t\t\t\t\tif (ind === j) state.tickValues.push(ar.time)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tsetCurrUpdTime(state, action) {\r\n\t\t\tstate.last_updated = action.payload.data.current.last_updated\r\n\t\t},\r\n\r\n\t\tsetType(state, action) {\r\n\t\t\tstate.typeY = action.payload\r\n\t\t},\r\n\r\n\t\tsetSlideGraphics(state, action) {\r\n\r\n\t\t\tif (state.dataXY.length) {\r\n\t\t\t\tconst time = action.payload\r\n\t\t\t\tlet currTime = new Date(time).getTime()\r\n\t\t\t\tlet lastUpdTime = new Date(state.last_updated).getTime()\r\n\t\t\t\tif (currTime < lastUpdTime) currTime = lastUpdTime\r\n\t\t\t\tconst firstTime = state.dataXY[0].time\r\n\t\t\t\tlet res = (((currTime - firstTime) / 3600000) - 2.9) * 650 / 24\r\n\t\t\t\tif (res > 1275) res = 1275\r\n\t\t\t\tif (res < 0) res = 0\r\n\r\n\t\t\t\tstate.slideGraphicsPx = res\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetMinY(state, action) {\r\n\t\t\tstate.minY = state.dataXY.reduce((min, cur) => {\r\n\t\t\t\tif (min >= cur[state.typeY]) min = (cur[state.typeY] - 1)\r\n\t\t\t\treturn min\r\n\t\t\t}, -1)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const {\r\n\tresetGraphicsStates,\r\n\tgetXY,\r\n\tsetSlideGraphics,\r\n\tgetArrHours,\r\n\tgetVisualY,\r\n\tsetCurrUpdTime,\r\n\tsetType,\r\n\tgetMinY\r\n} = graphSlice.actions\r\n\r\nexport default graphSlice.reducer","import React from 'react';\r\nimport {setType} from \"../../store/graphSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst TypeBtns = () => {\r\n\r\n\tconst {isMetric} = useSelector(state => state.currWeather)\r\n\tconst {typeY} = useSelector(state => state.graphics)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction handleClick(type, e) {\r\n\t\te.target.parentElement.querySelectorAll('button')\r\n\t\t\t\t.forEach(b => b.className = '')\r\n\t\te.target.classList.add('active')\r\n\t\tif (typeY === type) return\r\n\t\tif ((typeY.includes('temp')) && type === 'temp') return\r\n\t\tif (type === 'temp') {\r\n\t\t\tdispatch(setType(`${isMetric ? 'temp_c' : 'temp_f'}`))\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (type === 'wind') {\r\n\t\t\tdispatch(setType(`${isMetric ? 'wind_kph' : 'wind_mph'}`))\r\n\t\t\treturn\r\n\t\t}\r\n\t\tdispatch(setType(type))\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={'type-btns'}>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={'active'}\r\n\t\t\t\t\t\tonClick={(e) => handleClick('temp', e)}>\r\n\t\t\t\t\tТемпература\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={'vert-line'}>|</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={(e) => handleClick('humidity', e)}>\r\n\t\t\t\t\tВлажность\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={'vert-line'}>|</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={(e) => handleClick('wind', e)}>\r\n\t\t\t\t\tВетер\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TypeBtns;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst WindArrow = ({x, y, dx, datum}) => {\r\n\r\n\tconst {tickValues} = useSelector(state => state.graphics)\r\n\tlet {wind_degree, wind_kph} = datum\r\n\tconst isVisible = tickValues.includes(datum.time)\r\n\r\n\tif (wind_kph < 10) wind_kph = 10\r\n\r\n\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{isVisible && <svg x={(x - (wind_kph + 5) / 2) + dx} y={53}>\r\n\t\t\t\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tx=\"0px\" y=\"0px\" width={`${wind_kph}px`} height=\"42px\"\r\n\t\t\t\t\tviewBox=\"0 0 42 42\" enableBackground=\"new 0 0 42 42\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<polygon\r\n\t\t\t\t\tfill=\"#AEBFCF\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\ttransformOrigin: '50% 50%',\r\n\t\t\t\t\ttransform: `rotate(${wind_degree - 90}deg)`,\r\n\t\t\t\t}}\r\n\t\t\t\t\tpoints=\"27,37.5 42,20 27,4.5 18,4.5 30,16.5 0,16.5 0,23.5 30,23.5 18,37.5 \"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WindArrow;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setForecastData} from \"../../store/currWeatherSlice\";\r\n\r\nconst LabelAxis = (props) => {\r\n\r\n\tconst data = useSelector(state => state.data.data)\r\n\tconst dispatch = useDispatch()\r\n\r\n\treturn (\r\n\t\t\t<text\r\n\t\t\t\t\tx={props.x}\r\n\t\t\t\t\ty={props.y}\r\n\t\t\t>\r\n\t\t\t\t<tspan\r\n\t\t\t\t\t\tonClick={() => dispatch(setForecastData([props.datum, data]))}\r\n\t\t\t\t\t\tstyle={{fontSize: 12, fill: '#70757a'}}\r\n\t\t\t\t\t\tx={props.x}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</tspan>\r\n\t\t\t</text>\r\n\t);\r\n};\r\n\r\nexport default LabelAxis;","import {useSelector} from \"react-redux\";\r\n\r\nconst UseGraphics = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {typeY} = useSelector(state => state.graphics)\r\n\r\n\tfunction getVisualY(datum) {\r\n\r\n\t\tfunction addPostfix() {\r\n\t\t\tif (typeY.includes('temp')) return datum[typeY]\r\n\r\n\t\t\tswitch (typeY) {\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn datum[typeY]\r\n\t\t\t\tcase 'humidity':\r\n\t\t\t\t\treturn `${datum[typeY]}%`;\r\n\t\t\t\tcase 'wind_kph':\r\n\t\t\t\t\treturn `${datum[typeY]} км/ч`;\r\n\t\t\t\tcase 'wind_mph':\r\n\t\t\t\t\treturn `${datum[typeY]} ми/ч`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currHour = new Date(data.current.last_updated).getHours()\r\n\t\tlet hourX = new Date(datum.time).getHours()\r\n\r\n\t\tif (!typeY.includes('temp')) ++currHour\r\n\r\n\t\tfor (let i = currHour; i < 27; i += 3) {\r\n\t\t\tif (hourX === i) {\r\n\t\t\t\treturn addPostfix()\r\n\t\t\t}\r\n\t\t\tfor (let j = currHour; j >= 0; j -= 3) {\r\n\t\t\t\tif (hourX === j) {\r\n\t\t\t\t\treturn addPostfix()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst chartsStyles = {\r\n\t\tVictoryAxis: {\r\n\t\t\ttickLabels: {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\tfill: '#70757a',\r\n\t\t\t},\r\n\t\t\taxis: {stroke: null},\r\n\t\t},\r\n\t\tVictoryArea: {\r\n\t\t\tdata: {\r\n\t\t\t\tfill: `${typeY === 'humidity' ? \"#e8f0fe\" : '#fff5cc'}`,\r\n\t\t\t\tstroke: `${typeY === 'humidity' ? '#1a73e8' : \"#ffcc00\"}`,\r\n\t\t\t\tstrokeWidth: 2,\r\n\t\t\t},\r\n\t\t\tlabels: {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 11,\r\n\t\t\t\tfontWeight: 700,\r\n\t\t\t\tfill: `${typeY === 'humidity' ? '#1a73e8' : 'rgb(181, 181, 181)'}`,\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn {getVisualY, chartsStyles};\r\n};\r\n\r\nexport default UseGraphics;\r\n\r\n","import React from 'react';\r\nimport {setForecastData} from \"../../store/currWeatherSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useGraphics from \"../../hooks/useGraphics\";\r\n\r\nconst LabelComponent = (props) => {\r\n\tconst {datum, x, dx, y, dy, style} = props;\r\n\r\n\tconst data = useSelector(state => state.data.data)\r\n\tconst {currData} = useSelector(state => state.currWeather)\r\n\tconst dispatch = useDispatch()\r\n\tconst {getVisualY} = useGraphics()\r\n\r\n\treturn (\r\n\t\t\t<g\r\n\t\t\t\t\tonClick={() => dispatch(setForecastData([datum.time, data]))}\r\n\t\t\t\t\tstyle={style}\r\n\t\t\t\t\tx={x}\r\n\t\t\t\t\ty={getVisualY(datum)}\r\n\t\t\t>\r\n\t\t\t\t<rect\r\n\t\t\t\t\t\tvectorEffect=\"non-scaling-stroke\"\r\n\t\t\t\t\t\theight=\"85\" width={650 / 24}\r\n\t\t\t\t\t\tx={x}\r\n\t\t\t\t\t\tfill={'transparent'}\r\n\t\t\t\t\t\ty={y - 25}\r\n\t\t\t\t/>\r\n\t\t\t\t<text\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfill: new Date(currData.updTimeStamp).setMinutes(0) === datum.time\r\n\t\t\t\t\t\t\t\t\t? 'rgb(85, 85, 85)'\r\n\t\t\t\t\t\t\t\t\t: \"inherit\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tx={x + dx}\r\n\t\t\t\t\t\ty={y}\r\n\t\t\t\t\t\tdy={dy}\r\n\t\t\t\t>\r\n\t\t\t\t\t<tspan>\r\n\t\t\t\t\t\t{getVisualY(datum)}\r\n\t\t\t\t\t</tspan>\r\n\t\t\t\t</text>\r\n\t\t\t</g>\r\n\t);\r\n};\r\n\r\nexport default LabelComponent;","import React, {useEffect, useState} from 'react';\r\nimport {VictoryArea, VictoryAxis, VictoryChart, VictoryContainer, VictoryLabel, VictoryScatter} from \"victory\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getArrHours, getMinY, getXY, setCurrUpdTime, setSlideGraphics, setType} from \"../../store/graphSlice\";\r\nimport WindArrow from \"./WindArrow\";\r\nimport LabelAxis from \"./LabelAxis\";\r\nimport useGraphics from \"../../hooks/useGraphics\";\r\nimport LabelComponent from \"./LabelComponent\";\r\n\r\nconst WeatherGraphic = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {dataXY, slideGraphicsPx, typeY, tickValues, minY} =\r\n\t\t\tuseSelector(state => state.graphics)\r\n\tconst {isMetric} = useSelector(state => state.currWeather)\r\n\tconst dispatch = useDispatch()\r\n\tconst {getVisualY, chartsStyles} = useGraphics()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getXY({data}))\r\n\t\tdispatch(setCurrUpdTime({data}))\r\n\t\tdispatch(getArrHours())\r\n\t\tdispatch(setSlideGraphics(data.current.last_updated))\r\n\t}, [data])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (typeY.includes('temp')) {\r\n\t\t\tdispatch(setType(`${isMetric ? 'temp_c' : 'temp_f'}`))\r\n\t\t}\r\n\t\tif (typeY.includes('wind')) {\r\n\t\t\tdispatch(setType(`${isMetric ? 'wind_kph' : 'wind_mph'}`))\r\n\t\t}\r\n\t}, [isMetric])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getMinY())\r\n\t},[dataXY])\r\n\r\n\treturn (\r\n\t\t\t<VictoryChart\r\n\t\t\t\t\twidth={1925}\r\n\t\t\t\t\theight={125}\r\n\t\t\t\t\tpadding={{bottom: 20, top: 25, left: 0, right: 0}}\r\n\t\t\t\t\tdomainPadding={{y: [15, 25]}}\r\n\t\t\t\t\tcontainerComponent={\r\n\t\t\t\t\t\t<VictoryContainer\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttransform: `translateX(-${slideGraphicsPx}px)`,\r\n\t\t\t\t\t\t\t\t\ttransition: 'all 1000ms cubic-bezier(.51,-0.17,0,1)'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tresponsive={false}/>}\r\n\t\t\t>\r\n\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\tname='VictoryAxis'\r\n\t\t\t\t\t\tcrossAxis={false}\r\n\t\t\t\t\t\ttickValues={tickValues}\r\n\t\t\t\t\t\ttickFormat={(t) => `${new Date(t).getHours()}:00`}\r\n\t\t\t\t\t\tstyle={chartsStyles.VictoryAxis}\r\n\t\t\t\t\t\ttickLabelComponent={<LabelAxis y={123}/>}\r\n\t\t\t\t/>\r\n\t\t\t\t{typeY.includes('wind')\r\n\t\t\t\t\t\t? <VictoryScatter\r\n\t\t\t\t\t\t\t\tname='windChart'\r\n\t\t\t\t\t\t\t\tdata={dataXY}\r\n\t\t\t\t\t\t\t\tx='time'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\tfontFamily: '\"Arial\", sans-serif',\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 12, stroke: undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabels={({datum}) => getVisualY(datum)}\r\n\t\t\t\t\t\t\t\tdataComponent={<WindArrow dx={15}/>}\r\n\t\t\t\t\t\t\t\tlabelComponent={\r\n\t\t\t\t\t\t\t\t\t<VictoryLabel dx={15} y={35}/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: <VictoryArea\r\n\t\t\t\t\t\t\t\tname='chart'\r\n\t\t\t\t\t\t\t\ty0={() => minY}\r\n\t\t\t\t\t\t\t\tinterpolation={typeY === 'humidity' ? 'step' : 'basis'}\r\n\t\t\t\t\t\t\t\tstyle={chartsStyles.VictoryArea}\r\n\t\t\t\t\t\t\t\tdata={dataXY}\r\n\t\t\t\t\t\t\t\tx='time'\r\n\t\t\t\t\t\t\t\ty={typeY}\r\n\t\t\t\t\t\t\t\tlabels={({datum}) => getVisualY(datum)}\r\n\t\t\t\t\t\t\t\tlabelComponent={\r\n\t\t\t\t\t\t\t\t\t<LabelComponent\r\n\t\t\t\t\t\t\t\t\t\t\ty={typeY.includes('temp') ? undefined : 45}\r\n\t\t\t\t\t\t\t\t\t\t\tdx={typeY.includes('temp') ? 8 : 2}\r\n\t\t\t\t\t\t\t\t\t\t\tdy={-10}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</VictoryChart>\r\n\t);\r\n};\r\n\r\n\r\nexport default WeatherGraphic;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrDayData} from \"../../store/currWeatherSlice\";\r\nimport {setSlideGraphics} from \"../../store/graphSlice\";\r\n\r\nconst DaysBtns = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {currData, isMetric} = useSelector(state => state.currWeather)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction handlerClick(e, currDay) {\r\n\t\tconst btn = e.target.closest('button')\r\n\r\n\t\tif (!btn.classList.contains('active')) {\r\n\t\t\tbtn.parentElement.querySelectorAll('button')\r\n\t\t\t\t\t.forEach(b => b.classList.remove('active'))\r\n\t\t\tbtn.classList.add('active')\r\n\t\t}\r\n\t\tdispatch(setSlideGraphics(currDay.date))\r\n\t\tdispatch(setCurrDayData([currDay.date, currDay.day, data]))\r\n\t}\r\n\r\n\tfunction roundNums(...nums) {\r\n\t\treturn (nums.map(num => Math.round(num)))\r\n\t}\r\n\r\n\tfunction addBtns(btn) {\r\n\t\tlet {maxtemp_c, maxtemp_f, mintemp_c, mintemp_f} = btn.day\r\n\t\tconst {icon, text} = btn.day.condition\r\n\t\tconst currDay = new Date(currData.updTimeStamp).getDate()\r\n\t\tconst btnDay = new Date(btn.date).getDate();\r\n\r\n\t\t[maxtemp_c, maxtemp_f, mintemp_c, mintemp_f] = roundNums(maxtemp_c, maxtemp_f, mintemp_c, mintemp_f)\r\n\r\n\t\treturn (\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={e => handlerClick(e, btn)}\r\n\t\t\t\t\t\tclassName={`day-btn ${currDay === btnDay ? 'active' : ''}`}\r\n\t\t\t\t\t\tkey={btn.date}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div> {\r\n\t\t\t\t\t\tnew Intl.DateTimeFormat('ru-RU',\r\n\t\t\t\t\t\t\t\t{weekday: 'short'})\r\n\t\t\t\t\t\t\t\t.format(new Date(btn.date))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img width={64} height={64} src={icon} alt={text}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<span>  {`${isMetric ? maxtemp_c : maxtemp_f}`}&deg; </span>\r\n\t\t\t\t\t<span className={'day-btn__f'}>{`${isMetric ? mintemp_c : mintemp_f}`}&deg;</span>\r\n\t\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className=\"day-btns\">\r\n\t\t\t\t{data.forecast.forecastday\r\n\t\t\t\t\t\t.map(btn => addBtns(btn))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DaysBtns;","import 'normalize.css'\nimport './App.css';\nimport {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchWeather} from \"./store/dataSlice\";\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport TypeBtns from \"./components/TypeBtns/TypeBtns\";\nimport WeatherGraphic from \"./components/WeatherGraphic/WeatherGraphic\";\nimport DaysBtns from \"./components/DaysBtns/DaysBtns\";\nimport {setGeo} from \"./store/currWeatherSlice\";\n\nfunction App() {\n\tconst {error, statusFetchWeather} = useSelector(state => state.data)\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t(pos) => {\n\t\t\t\t\tdispatch(fetchWeather([pos.coords.latitude, pos.coords.longitude]))\n\t\t\t\t\tdispatch(setGeo(true))\n\t\t\t\t},\n\t\t\t\t(err) =>\n\t\t\t\t\t\tdispatch(fetchWeather([34.052235, -118.243683])), //Los angeles\n\t\t\t\t{\n\t\t\t\t\t\tenableHighAccuracy: true,\n\t\t\t\t\t\ttimeout: 5000,\n\t\t\t\t\t\tmaximumAge: 0\n\t\t\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{statusFetchWeather === 'loading' && <h2>Loading..</h2>}\n\t\t\t\t{error && <h2 style={{color: 'red'}}>Ошибка: {error}</h2>}\n\t\t\t\t{statusFetchWeather === 'ok' && !error &&\n\t\t\t\t<div className={'container'}>\n\t\t\t\t\t<CurrentWeather/>\n\t\t\t\t\t<TypeBtns/>\n\t\t\t\t\t<div className={'charts'}>\n\t\t\t\t\t\t<WeatherGraphic/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DaysBtns/>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t);\n}\n\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport graphSlice from \"./graphSlice\";\r\nimport dataSlice from './dataSlice'\r\nimport currWeatherSlice from \"./currWeatherSlice\";\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tdata: dataSlice,\r\n\t\tgraphics: graphSlice,\r\n\t\tcurrWeather: currWeatherSlice,\r\n\t}\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nimport {Provider} from \"react-redux\";\nimport store from './store'\n\n\nReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n);"],"sourceRoot":""}