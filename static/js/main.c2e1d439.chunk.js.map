{"version":3,"sources":["components/CurrentWeather/CurrentWeather.module.css","components/CurrentWeather/AutoLocationIcon.jsx","store/dataSlice.js","store/currWeatherSlice.js","hooks/useFindLocation.js","components/CurrentWeather/FindLocation.jsx","components/PortalModal/PortalModal.jsx","components/CurrentWeather/CurrentWeather.jsx","store/graphSlice.js","components/TypeBtns/TypeBtns.jsx","hooks/useGraphics.js","components/WeatherGraphic/LabelComponent.jsx","components/WeatherGraphic/LabelAxis.jsx","components/WeatherGraphic/WindArrow.jsx","components/WeatherGraphic/WeatherGraphic.jsx","components/DaysBtns/DaysBtns.jsx","App.jsx","store/index.js","index.js"],"names":["module","exports","AutoLocationIcon","size","fill","xmlns","style","margin","width","height","viewBox","d","memo","fetchWeather","createAsyncThunk","pos","a","rejectWithValue","lat","lon","url","fetch","response","ok","Error","json","message","dataSlice","createSlice","name","initialState","data","statusFetchWeather","errorFetchWeather","extraReducers","pending","state","fulfilled","action","payload","rejected","currWeatherSlice","currData","isMetric","isAutoLocation","reducers","setCurrData","curr","current","getCurrWeatherObject","last_updated","setForecastData","fCast","time","updTimeStamp","forecast","forecastday","forEach","ar","hour","ar1","Date","getTime","setCurrDayData","currDay","setMetric","setAutoLocation","isDay","formatOptions","weekday","undefined","minute","temp_c","Math","round","avgtemp_c","temp_f","avgtemp_f","icon","condition","precip_mm","totalprecip_mm","humidity","avghumidity","wind_kph","maxwind_kph","wind_mph","maxwind_mph","country","location","text","updTime","Intl","DateTimeFormat","format","actions","useFindLocation","dispatch","useDispatch","word","SetStatus","SetList","SetError","getUrPosition","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","err","enableHighAccuracy","timeout","maximumAge","fetchNewWeather","ev","target","value","fetchLocation","FindLocation","isVisible","inputElement","useRef","useState","listFindLocations","SetListFindLocations","errorFindLocations","SetErrorFindLocations","statusFetchLocation","SetStatusFetchLocation","itemKeyHandler","code","type","useLayoutEffect","focus","className","classes","findWrapper","findInput","ref","onChange","length","placeholder","tabIndex","findList","findItem","map","onClick","onKeyUp","id","PortalModal","isOpen","onClose","children","childrenClassName","onCloseHandler","closest","createPortal","document","body","CurrentWeather","useSelector","currWeather","isVisibleFindLocationInput","setVisibleFindLocationInput","useEffect","leftCol","src","alt","temp","btns","disabled","btn","active","vertLine","other","rightCol","btnFindLoc","graphSlice","dataXY","typeY","tickValues","slideGraphicsPx","minY","getXY","newData","push","wind_degree","getArrHours","currHour","getHours","newArr","ind","i","j","setCurrUpdTime","setType","setSlideGraphics","currTime","lastUpdTime","res","getMinY","reduce","min","cur","resetGraphicsStates","getVisualY","TypeBtns","graphics","handleClick","e","includes","parentElement","querySelectorAll","button","classList","add","UseGraphics","datum","addPostfix","hourX","chartsStyles","VictoryAxis","tickLabels","fontFamily","fontSize","axis","stroke","VictoryArea","strokeWidth","labels","fontWeight","cursor","LabelComponent","props","x","dx","y","dy","useGraphics","vectorEffect","setMinutes","LabelAxis","WindArrow","enableBackground","transformOrigin","transform","points","WeatherGraphic","padding","bottom","top","left","right","domainPadding","containerComponent","transition","responsive","crossAxis","tickFormat","t","tickLabelComponent","dataComponent","labelComponent","y0","interpolation","DaysBtns","addBtns","day","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","isSameDay","getDate","date","nums","num","roundNums","btnDay","b","remove","handlerClick","areEqual","prevProps","currProps","sameDay","getDay","App","color","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.c2e1d439.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"CurrentWeather_current__3eoIk\",\"leftCol\":\"CurrentWeather_leftCol__3OQxZ\",\"temp\":\"CurrentWeather_temp__3W1Vd\",\"btns\":\"CurrentWeather_btns__AZ7d7\",\"btn\":\"CurrentWeather_btn__Oh3m-\",\"active\":\"CurrentWeather_active__tCyXI\",\"vertLine\":\"CurrentWeather_vertLine__3lqeN\",\"other\":\"CurrentWeather_other__quPtP\",\"rightCol\":\"CurrentWeather_rightCol__t55u-\",\"btnFindLoc\":\"CurrentWeather_btnFindLoc__1LIEj\",\"location\":\"CurrentWeather_location__pkGnp\",\"findWrapper\":\"CurrentWeather_findWrapper__1a7QJ\",\"findInput\":\"CurrentWeather_findInput__3L8z8\",\"findList\":\"CurrentWeather_findList__QGo5A\",\"findItem\":\"CurrentWeather_findItem__aoEil\"};","import React, {memo} from 'react';\r\n\r\nconst AutoLocationIcon = ({size = 24, fill = '#fbbc04'}) => {\r\n\r\n\treturn (\r\n\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tstyle={{margin: '0 10px 0 0'}}\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\">\r\n\t\t\t\t<path fill={fill}\r\n\t\t\t\t\t\t\td=\"M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 11c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z\"/>\r\n\t\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default memo(AutoLocationIcon);\r\n\r\n\r\n","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst fetchWeather = createAsyncThunk(\r\n\t\t'data/fetchWeather',\r\n\t\tasync function (pos, {rejectWithValue}) {\r\n\t\t\tconst [lat, lon] = pos\r\n\t\t\tconst url = `https://api.weatherapi.com/v1/forecast.json?key=b8d348df879e486ca0f172620210610&q=${lat},${lon}&days=8&lang=ru`\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url)\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Server Error!')\r\n\t\t\t\t}\r\n\t\t\t\treturn await response.json()\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn rejectWithValue(e.message)\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nconst dataSlice = createSlice({\r\n\tname: 'data',\r\n\r\n\tinitialState: {\r\n\t\tdata: {},\r\n\t\tstatusFetchWeather: null,\r\n\t\terrorFetchWeather: null,\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[fetchWeather.pending]: (state) => {\r\n\t\t\tstate.statusFetchWeather = 'loading'\r\n\t\t},\r\n\t\t[fetchWeather.fulfilled]: (state, action) => {\r\n\t\t\tstate.data = action.payload\r\n\t\t\tstate.statusFetchWeather = 'ok'\r\n\t\t},\r\n\t\t[fetchWeather.rejected]: (state, action) => {\r\n\t\t\tstate.errorFetchWeather = action.payload\r\n\t\t\tstate.statusFetchWeather = 'rejected'\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport {fetchWeather}\r\nexport default dataSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst currWeatherSlice = createSlice({\r\n\t\t\tname: 'currWeather',\r\n\t\t\tinitialState: {\r\n\t\t\t\tcurrData: {},\r\n\t\t\t\tisMetric: true,\r\n\t\t\t\tisAutoLocation: false,\r\n\t\t\t},\r\n\r\n\t\t\treducers: {\r\n\t\t\t\tsetCurrData(state, action) {\r\n\t\t\t\t\tconst {data} = action.payload\r\n\t\t\t\t\tconst curr = data.current;\r\n\t\t\t\t\tstate.currData = getCurrWeatherObject(data, curr, curr.last_updated)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetForecastData(state, action) {\r\n\t\t\t\t\tconst [time, data] = action.payload\r\n\t\t\t\t\tif (state.currData.updTimeStamp === time) return\r\n\r\n\t\t\t\t\tlet fCast\r\n\t\t\t\t\tdata.forecast.forecastday.forEach((ar) => ar.hour.forEach((ar1) => {\r\n\t\t\t\t\t\tif (new Date(ar1.time).getTime() === time) {\r\n\t\t\t\t\t\t\tfCast = ar1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tstate.currData = getCurrWeatherObject(data, fCast, fCast.time)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetCurrDayData(state, action) {\r\n\t\t\t\t\tconst [time, currDay, data] = action.payload\r\n\t\t\t\t\tif (state.currData.updTimeStamp === time) return\r\n\t\t\t\t\tstate.currData = getCurrWeatherObject(data, currDay, time, true)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMetric(state, action) {\r\n\t\t\t\t\tstate.isMetric = action.payload\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetAutoLocation(state, action) {\r\n\t\t\t\t\tstate.isAutoLocation = action.payload\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nfunction getCurrWeatherObject(data, curr, last_updated, isDay = false) {\r\n\r\n\tconst formatOptions = {\r\n\t\tweekday: 'long',\r\n\t\thour: isDay ? undefined : 'numeric',\r\n\t\tminute: isDay ? undefined : 'numeric'\r\n\t}\r\n\r\n\treturn {\r\n\t\ttemp_c: Math.round(isDay ? curr.avgtemp_c : curr.temp_c),\r\n\t\ttemp_f: Math.round(isDay ? curr.avgtemp_f : curr.temp_f),\r\n\t\ticon: curr.condition.icon,\r\n\t\tprecip_mm: isDay ? curr.totalprecip_mm : curr.precip_mm,\r\n\t\thumidity: isDay ? curr.avghumidity : curr.humidity,\r\n\t\twind_kph: Math.round(isDay ? curr.maxwind_kph : curr.wind_kph),\r\n\t\twind_mph: Math.round(isDay ? curr.maxwind_mph : curr.wind_mph),\r\n\t\tcountry: data.location.country,\r\n\t\tname: data.location.name,\r\n\t\ttext: curr.condition.text,\r\n\t\tupdTime: new Intl.DateTimeFormat('ru-RU', formatOptions)\r\n\t\t\t\t.format(new Date(last_updated)),\r\n\t\tupdTimeStamp: new Date(last_updated).getTime()\r\n\t}\r\n}\r\n\r\nexport const {\r\n\tsetCurrData,\r\n\tsetForecastData,\r\n\tsetMetric,\r\n\tsetCurrDayData,\r\n\tsetAutoLocation,\r\n} = currWeatherSlice.actions\r\n\r\nexport default currWeatherSlice.reducer","import {fetchWeather} from \"../store/dataSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAutoLocation} from \"../store/currWeatherSlice\";\r\n\r\nconst useFindLocation = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction getUrPosition() {\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\tpos => {\r\n\t\t\t\t\tdispatch(fetchWeather([pos.coords.latitude, pos.coords.longitude]))\r\n\t\t\t\t\tdispatch(setAutoLocation(true))\r\n\t\t\t\t},\r\n\t\t\t\terr =>\r\n\t\t\t\t\t\tdispatch(fetchWeather([34.052235, -118.243683])), //Los angeles\r\n\t\t\t\t{\r\n\t\t\t\t\tenableHighAccuracy: true,\r\n\t\t\t\t\ttimeout: 5000,\r\n\t\t\t\t\tmaximumAge: 0\r\n\t\t\t\t});\r\n\t}\r\n\r\n\tasync function fetchLocation(word, SetStatus, SetList, SetError) {\r\n\t\tSetStatus('loading')\r\n\r\n\t\tconst url = `https://api.weatherapi.com/v1/search.json?key=b8d348df879e486ca0f172620210610&q=${word}`\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url)\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Server Error!')\r\n\t\t\t}\r\n\t\t\tSetList(await response.json())\r\n\t\t\tSetStatus('ok')\r\n\t\t} catch (e) {\r\n\t\t\tSetError(e.message)\r\n\t\t\tSetStatus('error')\r\n\t\t}\r\n\t}\r\n\r\n\tfunction fetchNewWeather(ev, lat, lon) {\r\n\t\tdispatch(fetchWeather([lat, lon]))\r\n\t\tev.target.value = ''\r\n\t\tdispatch(setAutoLocation(false))\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetUrPosition,\r\n\t\tfetchNewWeather,\r\n\t\tfetchLocation,\r\n\t}\r\n}\r\n\r\nexport default useFindLocation;","import React, {useLayoutEffect, useRef, useState} from 'react';\r\nimport classes from \"./CurrentWeather.module.css\";\r\nimport useFindLocation from \"../../hooks/useFindLocation\";\r\n\r\nconst FindLocation = ({isVisible}) => {\r\n\r\n\tconst {fetchNewWeather, fetchLocation} = useFindLocation()\r\n\r\n\tconst inputElement = useRef()\r\n\r\n\tconst [listFindLocations, SetListFindLocations] = useState([])\r\n\tconst [errorFindLocations, SetErrorFindLocations] = useState(null)\r\n\tconst [statusFetchLocation, SetStatusFetchLocation] = useState(null)\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tif (isVisible) inputElement.current.focus()\r\n\t}, [])\r\n\r\n\tfunction itemKeyHandler(ev, location) {\r\n\t\tif (ev.code === 'Enter' || ev.type === \"click\") fetchNewWeather(ev, location.lat, location.lon)\r\n\t}\r\n\r\n\tfunction onChangeInputFindLocation(word) {\r\n\t\tif (word.length > 2) {\r\n\t\t\tfetchLocation(word, SetStatusFetchLocation, SetListFindLocations, SetErrorFindLocations)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={`${classes.findWrapper} js-findWrapper`}>\r\n\t\t\t\t<h3>Введите название населенного пункта</h3>\r\n\t\t\t\t<input className={classes.findInput}\r\n\t\t\t\t\t\t\t ref={inputElement}\r\n\t\t\t\t\t\t\t onChange={ev => onChangeInputFindLocation(ev.target.value)}\r\n\t\t\t\t\t\t\t placeholder={'Поиск от 3 символов'}\r\n\t\t\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t\t\t name=\"country-name\"\r\n\t\t\t\t/>\r\n\t\t\t\t<ul tabIndex={0} className={classes.findList}>\r\n\t\t\t\t\t{statusFetchLocation === 'loading' && <li className={classes.findItem}>loading...</li>}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlistFindLocations.length > 0\r\n\t\t\t\t\t\t&& statusFetchLocation === 'ok'\r\n\t\t\t\t\t\t&& listFindLocations.map(location => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li className={classes.findItem}\r\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={ev => itemKeyHandler(ev, location)}\r\n\t\t\t\t\t\t\t\t\t\t\tonKeyUp={ev => itemKeyHandler(ev, location)}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={location.id}>\r\n\t\t\t\t\t\t\t\t\t\t{location.name}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlistFindLocations.length === 0\r\n\t\t\t\t\t\t&& statusFetchLocation === 'ok'\r\n\t\t\t\t\t\t&& <li className={classes.findItem}>Не найдено</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{statusFetchLocation === 'error' && <li className={classes.findItem}>{errorFindLocations}</li>}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FindLocation;","import React from 'react';\r\nimport {createPortal} from \"react-dom\";\r\n\r\nconst PortalModal = ({isOpen, onClose, children, childrenClassName}) => {\r\n\tif (!isOpen) return null;\r\n\r\n\tfunction onCloseHandler(ev) {\r\n\t\tif (!ev.target.closest(`.${childrenClassName}`) || ev.code === \"Escape\") {\r\n\t\t\tonClose()\r\n\t\t}\r\n\t}\r\n\r\n\treturn createPortal(\r\n\t\t\t<div\r\n\t\t\t\t\tclassName=\"modal\"\r\n\t\t\t\t\tonClick={onCloseHandler}\r\n\t\t\t\t\tonKeyUp={onCloseHandler}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</div>,\r\n\t\t\tdocument.body\r\n\t);\r\n};\r\n\r\nexport default PortalModal;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classes from './CurrentWeather.module.css'\r\n\r\nimport AutoLocationIcon from \"./AutoLocationIcon\";\r\nimport FindLocation from \"./FindLocation\";\r\nimport PortalModal from \"../PortalModal/PortalModal\";\r\n\r\nimport {setCurrData, setMetric} from \"../../store/currWeatherSlice\";\r\n\r\nconst CurrentWeather = () => {\r\n\r\n\tconst {isMetric, currData, isAutoLocation}\r\n\t\t\t= useSelector(state => state.currWeather)\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\r\n\tconst [isVisibleFindLocationInput, setVisibleFindLocationInput] = useState(false)\r\n\r\n\tconst {\r\n\t\ttemp_c, temp_f, icon, precip_mm, humidity, wind_kph,\r\n\t\twind_mph, country, name, text, updTime\r\n\t} = currData\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setCurrData({data}))\r\n\t}, [data])\r\n\r\n\treturn (\r\n\t\t\t<div className={classes.current}>\r\n\r\n\t\t\t\t<div className={classes.leftCol}>\r\n\t\t\t\t\t<img width={64} height={64} src={icon} alt=\"weather icon\"/>\r\n\t\t\t\t\t<span className={classes.temp}>{isMetric ? temp_c : temp_f}</span>\r\n\t\t\t\t\t<div className={classes.btns}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={isMetric}\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setMetric(true))}\r\n\t\t\t\t\t\t\t\tclassName={`${classes.btn} ${isMetric ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t&deg;C\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span className={classes.vertLine}>|</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={!isMetric}\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setMetric(false))}\r\n\t\t\t\t\t\t\t\tclassName={`${classes.btn} ${!isMetric ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t&deg;F\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul className={classes.other}>\r\n\t\t\t\t\t\t<li>Осадки: {precip_mm} мм</li>\r\n\t\t\t\t\t\t<li>Влажность: {humidity}%</li>\r\n\t\t\t\t\t\t<li>Ветер: {isMetric ? `${wind_kph} км/ч` : `${wind_mph} ми/ч`}</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={classes.rightCol}>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => setVisibleFindLocationInput(true)}\r\n\t\t\t\t\t\t\tclassName={classes.btnFindLoc}>\r\n\t\t\t\t\t\t{isAutoLocation && <AutoLocationIcon size={20}/>}\r\n\t\t\t\t\t\t<h1 className={classes.location}>{country}, {name}</h1>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<span>{updTime}</span>\r\n\t\t\t\t\t<span>{text}</span>\r\n\r\n\t\t\t\t\t<PortalModal\r\n\t\t\t\t\t\t\tchildrenClassName={'js-findWrapper'}\r\n\t\t\t\t\t\t\tisOpen={isVisibleFindLocationInput}\r\n\t\t\t\t\t\t\tonClose={() => setVisibleFindLocationInput(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FindLocation\r\n\t\t\t\t\t\t\t\tisVisible={isVisibleFindLocationInput}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PortalModal>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default CurrentWeather;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst defStates = {\r\n\tdataXY: [],\r\n\ttypeY: 'temp_c',\r\n\ttickValues: [],\r\n\tlast_updated: null,\r\n\tslideGraphicsPx: null,\r\n\tminY: -1,\r\n}\r\n\r\nconst graphSlice = createSlice({\r\n\tname: 'graph',\r\n\tinitialState: defStates,\r\n\treducers: {\r\n\r\n\t\tgetXY(state, action) {\r\n\t\t\tconst newData = []\r\n\t\t\tfor (const day of action.payload.data.forecast.forecastday) {\r\n\t\t\t\tday.hour.forEach((hour) => {\r\n\t\t\t\t\tnewData.push({\r\n\t\t\t\t\t\ttime: new Date(hour.time).getTime(),\r\n\t\t\t\t\t\ttemp_c: Math.round(hour.temp_c),\r\n\t\t\t\t\t\ttemp_f: Math.round(hour.temp_f),\r\n\t\t\t\t\t\thumidity: Math.round(hour.humidity),\r\n\t\t\t\t\t\twind_kph: Math.round(hour.wind_kph),\r\n\t\t\t\t\t\twind_mph: Math.round(hour.wind_mph),\r\n\t\t\t\t\t\twind_degree: hour.wind_degree,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tstate.dataXY = newData\r\n\t\t},\r\n\r\n\t\tgetArrHours(state) {\r\n\t\t\tlet currHour = new Date(state.last_updated).getHours()\r\n\t\t\t++currHour\r\n\t\t\tconst newArr = []\r\n\t\t\tstate.dataXY.forEach((ar, ind) => {\r\n\t\t\t\tfor (let i = currHour; i < 75; i += 3) {\r\n\t\t\t\t\tif (ind === i) newArr.push(ar.time)\r\n\t\t\t\t\tfor (let j = currHour; j >= 0; j -= 3) {\r\n\t\t\t\t\t\tif (ind === j) newArr.push(ar.time)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tstate.tickValues = newArr\r\n\t\t},\r\n\r\n\t\tsetCurrUpdTime(state, action) {\r\n\t\t\tstate.last_updated = action.payload.data.current.last_updated\r\n\t\t},\r\n\r\n\t\tsetType(state, action) {\r\n\t\t\tstate.typeY = action.payload\r\n\t\t},\r\n\r\n\t\tsetSlideGraphics(state, action) {\r\n\t\t\t\tconst time = action.payload\r\n\t\t\t\tlet currTime = new Date(time).getTime()\r\n\t\t\t\tlet lastUpdTime = new Date(state.last_updated).getTime()\r\n\r\n\t\t\t\tif (currTime < lastUpdTime) currTime = lastUpdTime\r\n\t\t\t\tconst firstTime = state.dataXY[0].time\r\n\t\t\t\tlet res = (((currTime - firstTime) / 3600000) - 2.9) * 650 / 24\r\n\r\n\t\t\t\tif (res > 1275) res = 1275\r\n\t\t\t\tif (res < 0) res = 0\r\n\r\n\t\t\t\tstate.slideGraphicsPx = res\r\n\t\t},\r\n\r\n\t\tgetMinY(state, action) {\r\n\t\t\tstate.minY = state.dataXY.reduce((min, cur) => {\r\n\t\t\t\tif (min >= cur[state.typeY]) min = (cur[state.typeY] - 1)\r\n\t\t\t\treturn min\r\n\t\t\t}, -1)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const {\r\n\tresetGraphicsStates,\r\n\tgetXY,\r\n\tsetSlideGraphics,\r\n\tgetArrHours,\r\n\tgetVisualY,\r\n\tsetCurrUpdTime,\r\n\tsetType,\r\n\tgetMinY\r\n} = graphSlice.actions\r\n\r\nexport default graphSlice.reducer","import React from 'react';\r\nimport {setType} from \"../../store/graphSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst TypeBtns = () => {\r\n\r\n\tconst {isMetric} = useSelector(state => state.currWeather)\r\n\tconst {typeY} = useSelector(state => state.graphics)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction handleClick(type, e) {\r\n\t\tif (typeY === type) return\r\n\t\tif (typeY.includes(`${type}`)) return\r\n\r\n\t\te.target.parentElement.querySelectorAll('button')\r\n\t\t\t\t.forEach(button => button.className = '')\r\n\t\te.target.classList.add('active')\r\n\r\n\t\tif (type === 'temp') {\r\n\t\t\tdispatch(setType(`${isMetric ? 'temp_c' : 'temp_f'}`))\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (type === 'wind') {\r\n\t\t\tdispatch(setType(`${isMetric ? 'wind_kph' : 'wind_mph'}`))\r\n\t\t\treturn\r\n\t\t}\r\n\t\tdispatch(setType(type))\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={'type-btns'}>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={'active'}\r\n\t\t\t\t\t\tonClick={e => handleClick('temp', e)}>\r\n\t\t\t\t\tТемпература\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={'vert-line'}>|</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={e => handleClick('humidity', e)}>\r\n\t\t\t\t\tВлажность\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={'vert-line'}>|</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={e => handleClick('wind', e)}>\r\n\t\t\t\t\tВетер\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TypeBtns;","import {useSelector} from \"react-redux\";\r\n\r\nconst UseGraphics = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {typeY} = useSelector(state => state.graphics)\r\n\r\n\tfunction getVisualY(datum) {\r\n\r\n\t\tfunction addPostfix() {\r\n\t\t\tif (typeY.includes('temp')) return datum[typeY]\r\n\r\n\t\t\tswitch (typeY) {\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn datum[typeY]\r\n\t\t\t\tcase 'humidity':\r\n\t\t\t\t\treturn `${datum[typeY]}%`;\r\n\t\t\t\tcase 'wind_kph':\r\n\t\t\t\t\treturn `${datum[typeY]} км/ч`;\r\n\t\t\t\tcase 'wind_mph':\r\n\t\t\t\t\treturn `${datum[typeY]} ми/ч`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currHour = new Date(data.current.last_updated).getHours()\r\n\t\tlet hourX = new Date(datum.time).getHours()\r\n\r\n\t\tif (!typeY.includes('temp')) ++currHour\r\n\r\n\t\tfor (let i = currHour; i < 27; i += 3) {\r\n\t\t\tif (hourX === i) {\r\n\t\t\t\treturn addPostfix()\r\n\t\t\t}\r\n\t\t\tfor (let j = currHour; j >= 0; j -= 3) {\r\n\t\t\t\tif (hourX === j) {\r\n\t\t\t\t\treturn addPostfix()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst chartsStyles = {\r\n\t\tVictoryAxis: {\r\n\t\t\ttickLabels: {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\tfill: '#70757a',\r\n\t\t\t},\r\n\t\t\taxis: {stroke: null},\r\n\t\t},\r\n\t\tVictoryArea: {\r\n\t\t\tdata: {\r\n\t\t\t\tfill: `${typeY === 'humidity' ? \"#e8f0fe\" : '#fff5cc'}`,\r\n\t\t\t\tstroke: `${typeY === 'humidity' ? '#1a73e8' : \"#ffcc00\"}`,\r\n\t\t\t\tstrokeWidth: 2,\r\n\t\t\t},\r\n\t\t\tlabels: {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 11,\r\n\t\t\t\tfontWeight: 700,\r\n\t\t\t\tfill: `${typeY === 'humidity' ? '#1a73e8' : 'rgb(181, 181, 181)'}`,\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn {getVisualY, chartsStyles};\r\n};\r\n\r\nexport default UseGraphics;\r\n\r\n","import React from 'react';\r\nimport {setForecastData} from \"../../store/currWeatherSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useGraphics from \"../../hooks/useGraphics\";\r\n\r\nconst LabelComponent = (props) => {\r\n\tconst {datum, x, dx, y, dy, style} = props;\r\n\r\n\tconst data = useSelector(state => state.data.data)\r\n\tconst {currData} = useSelector(state => state.currWeather)\r\n\tconst dispatch = useDispatch()\r\n\tconst {getVisualY} = useGraphics()\r\n\r\n\treturn (\r\n\t\t\t<g\r\n\t\t\t\t\tonClick={() => dispatch(setForecastData([datum.time, data]))}\r\n\t\t\t\t\tstyle={style}\r\n\t\t\t\t\tx={x}\r\n\t\t\t\t\ty={getVisualY(datum)}\r\n\t\t\t>\r\n\t\t\t\t<rect\r\n\t\t\t\t\t\tvectorEffect=\"non-scaling-stroke\"\r\n\t\t\t\t\t\theight=\"85\" width={650 / 24}\r\n\t\t\t\t\t\tx={x}\r\n\t\t\t\t\t\tfill={'transparent'}\r\n\t\t\t\t\t\ty={y - 25}\r\n\t\t\t\t/>\r\n\t\t\t\t<text\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfill: new Date(currData.updTimeStamp).setMinutes(0) === datum.time\r\n\t\t\t\t\t\t\t\t\t? 'rgb(85, 85, 85)'\r\n\t\t\t\t\t\t\t\t\t: \"inherit\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tx={x + dx}\r\n\t\t\t\t\t\ty={y}\r\n\t\t\t\t\t\tdy={dy}\r\n\t\t\t\t>\r\n\t\t\t\t\t<tspan>\r\n\t\t\t\t\t\t{getVisualY(datum)}\r\n\t\t\t\t\t</tspan>\r\n\t\t\t\t</text>\r\n\t\t\t</g>\r\n\t);\r\n};\r\n\r\nexport default LabelComponent;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setForecastData} from \"../../store/currWeatherSlice\";\r\n\r\nconst LabelAxis = ({x, y ,datum, text}) => {\r\n\r\n\tconst data = useSelector(state => state.data.data)\r\n\tconst dispatch = useDispatch()\r\n\r\n\treturn (\r\n\t\t\t<text\r\n\t\t\t\t\tx={x}\r\n\t\t\t\t\ty={y}\r\n\t\t\t>\r\n\t\t\t\t<tspan\r\n\t\t\t\t\t\tonClick={() => dispatch(setForecastData([datum, data]))}\r\n\t\t\t\t\t\tstyle={{fontSize: 12, fill: '#70757a'}}\r\n\t\t\t\t\t\tx={x}\r\n\t\t\t\t>\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</tspan>\r\n\t\t\t</text>\r\n\t);\r\n};\r\n\r\nexport default LabelAxis;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst WindArrow = ({x, y, dx, datum}) => {\r\n\r\n\tconst {tickValues} = useSelector(state => state.graphics)\r\n\tlet {wind_degree, wind_kph, time} = datum\r\n\tconst isVisible = tickValues.includes(time)\r\n\r\n\tif (!isVisible) return null\r\n\r\n\tif (wind_kph < 10) wind_kph = 10\r\n\r\n\treturn (\r\n\t\t\t<svg x={(x - (wind_kph + 5) / 2) + dx}\r\n\t\t\t\t\t y={53}>\r\n\t\t\t\t<svg\r\n\t\t\t\t\t\tx=\"0px\"\r\n\t\t\t\t\t\ty=\"0px\"\r\n\t\t\t\t\t\twidth={`${wind_kph}px`}\r\n\t\t\t\t\t\theight=\"42px\"\r\n\t\t\t\t\t\tviewBox=\"0 0 42 42\"\r\n\t\t\t\t\t\tenableBackground=\"new 0 0 42 42\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\tfill=\"#AEBFCF\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttransformOrigin: '50% 50%',\r\n\t\t\t\t\t\t\t\ttransform: `rotate(${wind_degree - 90}deg)`,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tpoints=\"27,37.5 42,20 27,4.5 18,4.5 30,16.5 0,16.5 0,23.5 30,23.5 18,37.5 \"/>\r\n\t\t\t\t</svg>\r\n\t\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default WindArrow;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {VictoryArea, VictoryAxis, VictoryChart, VictoryContainer, VictoryLabel, VictoryScatter} from \"victory\";\r\nimport {getArrHours, getMinY, getXY, setCurrUpdTime, setSlideGraphics, setType} from \"../../store/graphSlice\";\r\n\r\nimport useGraphics from \"../../hooks/useGraphics\";\r\nimport LabelComponent from \"./LabelComponent\";\r\nimport LabelAxis from \"./LabelAxis\";\r\nimport WindArrow from \"./WindArrow\";\r\n\r\nconst WeatherGraphic = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {dataXY, slideGraphicsPx, typeY, tickValues, minY} =\r\n\t\t\tuseSelector(state => state.graphics)\r\n\tconst {isMetric} = useSelector(state => state.currWeather)\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst {getVisualY, chartsStyles} = useGraphics()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getXY({data}))\r\n\t\tdispatch(setCurrUpdTime({data}))\r\n\t\tdispatch(getArrHours())\r\n\t\tdispatch(setSlideGraphics(data.current.last_updated))\r\n\t}, [data])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (typeY.includes('temp')) {\r\n\t\t\tdispatch(setType(`${isMetric ? 'temp_c' : 'temp_f'}`))\r\n\t\t}\r\n\t\tif (typeY.includes('wind')) {\r\n\t\t\tdispatch(setType(`${isMetric ? 'wind_kph' : 'wind_mph'}`))\r\n\t\t}\r\n\t}, [isMetric])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getMinY())\r\n\t}, [dataXY])\r\n\r\n\treturn (\r\n\t\t\t<VictoryChart\r\n\t\t\t\t\twidth={1925}\r\n\t\t\t\t\theight={125}\r\n\t\t\t\t\tpadding={{bottom: 20, top: 25, left: 0, right: 0}}\r\n\t\t\t\t\tdomainPadding={{y: [15, 25]}}\r\n\t\t\t\t\tcontainerComponent={\r\n\t\t\t\t\t\t<VictoryContainer\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttransform: `translateX(-${slideGraphicsPx}px)`,\r\n\t\t\t\t\t\t\t\t\ttransition: 'all 1000ms cubic-bezier(.51,-0.17,0,1)'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tresponsive={false}/>}\r\n\t\t\t>\r\n\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\tname='VictoryAxis'\r\n\t\t\t\t\t\tcrossAxis={false}\r\n\t\t\t\t\t\ttickValues={tickValues}\r\n\t\t\t\t\t\ttickFormat={(t) => `${new Date(t).getHours()}:00`}\r\n\t\t\t\t\t\tstyle={chartsStyles.VictoryAxis}\r\n\t\t\t\t\t\ttickLabelComponent={<LabelAxis y={123}/>}\r\n\t\t\t\t/>\r\n\t\t\t\t{typeY.includes('wind')\r\n\t\t\t\t\t\t? <VictoryScatter\r\n\t\t\t\t\t\t\t\tname='windChart'\r\n\t\t\t\t\t\t\t\tdata={dataXY}\r\n\t\t\t\t\t\t\t\tx='time'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\tfontFamily: 'Arial, sans-serif',\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 12, stroke: undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabels={({datum}) => getVisualY(datum)}\r\n\t\t\t\t\t\t\t\tdataComponent={<WindArrow dx={15}/>}\r\n\t\t\t\t\t\t\t\tlabelComponent={\r\n\t\t\t\t\t\t\t\t\t<VictoryLabel dx={15} y={35}/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: <VictoryArea\r\n\t\t\t\t\t\t\t\tname='chart'\r\n\t\t\t\t\t\t\t\ty0={() => minY}\r\n\t\t\t\t\t\t\t\tinterpolation={typeY === 'humidity' ? 'step' : 'basis'}\r\n\t\t\t\t\t\t\t\tstyle={chartsStyles.VictoryArea}\r\n\t\t\t\t\t\t\t\tdata={dataXY}\r\n\t\t\t\t\t\t\t\tx='time'\r\n\t\t\t\t\t\t\t\ty={typeY}\r\n\t\t\t\t\t\t\t\tlabels={({datum}) => getVisualY(datum)}\r\n\t\t\t\t\t\t\t\tlabelComponent={\r\n\t\t\t\t\t\t\t\t\t<LabelComponent\r\n\t\t\t\t\t\t\t\t\t\t\ty={typeY.includes('temp') ? undefined : 45}\r\n\t\t\t\t\t\t\t\t\t\t\tdx={typeY.includes('temp') ? 8 : 2}\r\n\t\t\t\t\t\t\t\t\t\t\tdy={-10}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</VictoryChart>\r\n\t);\r\n};\r\n\r\nexport default WeatherGraphic;","import React, {memo} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrDayData} from \"../../store/currWeatherSlice\";\r\nimport {setSlideGraphics} from \"../../store/graphSlice\";\r\n\r\nconst DaysBtns = ({currData, isMetric}) => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction handlerClick(e, btnDay, isSameDay) {\r\n\t\tif (isSameDay) return\r\n\r\n\t\tconst btn = e.target.closest('button')\r\n\r\n\t\tbtn.parentElement.querySelectorAll('button')\r\n\t\t\t\t.forEach(b => b.classList.remove('active'))\r\n\t\tbtn.classList.add('active')\r\n\r\n\t\tdispatch(setSlideGraphics(btnDay.date))\r\n\t\tdispatch(setCurrDayData([btnDay.date, btnDay.day, data]))\r\n\t}\r\n\r\n\tfunction addBtns(btn) {\r\n\t\tlet {maxtemp_c, maxtemp_f, mintemp_c, mintemp_f} = btn.day\r\n\t\tconst {icon, text} = btn.day.condition\r\n\t\tconst currDay = new Date(currData.updTimeStamp).getDate()\r\n\t\tconst btnDay = new Date(btn.date).getDate();\r\n\t\tconst isSameDay = currDay === btnDay;\r\n\r\n\t\tfunction roundNums(...nums) {\r\n\t\t\treturn (nums.map(num => Math.round(num)))\r\n\t\t}\r\n\r\n\t\t[maxtemp_c, maxtemp_f, mintemp_c, mintemp_f]\r\n\t\t\t\t= roundNums(maxtemp_c, maxtemp_f, mintemp_c, mintemp_f)\r\n\r\n\t\treturn (\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={e => handlerClick(e, btn, isSameDay)}\r\n\t\t\t\t\t\tclassName={`day-btn ${isSameDay ? 'active' : ''}`}\r\n\t\t\t\t\t\tkey={btn.date}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div> {\r\n\t\t\t\t\t\tnew Intl.DateTimeFormat('ru-RU',\r\n\t\t\t\t\t\t\t\t{weekday: 'short'})\r\n\t\t\t\t\t\t\t\t.format(new Date(btn.date))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img width={64} height={64} src={icon} alt={text}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<span>  {`${isMetric ? maxtemp_c : maxtemp_f}`}&deg; </span>\r\n\t\t\t\t\t<span className={'day-btn__f'}>{`${isMetric ? mintemp_c : mintemp_f}`}&deg;</span>\r\n\t\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className=\"day-btns\">\r\n\t\t\t\t{data.forecast.forecastday\r\n\t\t\t\t\t\t.map(btn => addBtns(btn))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nfunction areEqual(prevProps, currProps) {\r\n\tconst sameDay = new Date(prevProps.currData.updTimeStamp).getDay() === new Date(currProps.currData.updTimeStamp).getDay()\r\n\treturn (prevProps.isMetric === currProps.isMetric && sameDay)\r\n}\r\n\r\nexport default memo(DaysBtns, areEqual);\r\n","import 'normalize.css'\nimport './App.css';\n\nimport {useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport TypeBtns from \"./components/TypeBtns/TypeBtns\";\nimport WeatherGraphic from \"./components/WeatherGraphic/WeatherGraphic\";\nimport DaysBtns from \"./components/DaysBtns/DaysBtns\";\nimport useFindLocation from \"./hooks/useFindLocation\";\n\nfunction App() {\n\tconst {errorFetchWeather, statusFetchWeather} = useSelector(state => state.data)\n\tconst {currData, isMetric} = useSelector(state => state.currWeather)\n\n\tconst { getUrPosition } = useFindLocation()\n\n\tuseEffect(() => {\n\t\tgetUrPosition()\n\t}, []);\n\n\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{statusFetchWeather === 'loading' && <h2>loading...</h2>}\n\t\t\t\t{errorFetchWeather && <h2 style={{color: 'red'}}>Ошибка: {errorFetchWeather}</h2>}\n\t\t\t\t{statusFetchWeather === 'ok'\n\t\t\t\t&& !errorFetchWeather\n\t\t\t\t&& <div className={'container'}>\n\t\t\t\t\t<CurrentWeather/>\n\t\t\t\t\t<TypeBtns/>\n\t\t\t\t\t<div className={'charts'}>\n\t\t\t\t\t\t<WeatherGraphic/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DaysBtns currData={currData} isMetric={isMetric}/>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t);\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport graphSlice from \"./graphSlice\";\r\nimport dataSlice from './dataSlice'\r\nimport currWeatherSlice from \"./currWeatherSlice\";\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tdata: dataSlice,\r\n\t\tgraphics: graphSlice,\r\n\t\tcurrWeather: currWeatherSlice,\r\n\t}\r\n})","import './wdyr'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport {Provider} from \"react-redux\";\nimport store from './store'\n\n\nReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n);"],"sourceRoot":""}