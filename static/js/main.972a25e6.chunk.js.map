{"version":3,"sources":["components/CurrentWeather/CurrentWeather.module.css","store/dataSlice.js","store/currWeatherSlice.js","components/CurrentWeather/AutoLocationIcon.jsx","hooks/useFindLocation.js","components/CurrentWeather/CurrentWeather.jsx","store/graphSlice.js","components/TypeBtns/TypeBtns.js","components/WeatherGraphic/WindArrow.js","components/WeatherGraphic/LabelAxis.js","hooks/useGraphics.js","components/WeatherGraphic/LabelComponent.js","components/WeatherGraphic/WeatherGraphic.jsx","components/DaysBtns/DaysBtns.js","App.js","store/index.js","index.js"],"names":["module","exports","fetchWeather","createAsyncThunk","pos","a","rejectWithValue","lat","lon","url","fetch","response","ok","Error","json","message","fetchLocation","word","dataSlice","createSlice","name","initialState","data","listFindLocations","statusFetchLocation","error","statusFetchWeather","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","actions","setStatusFind","currWeatherSlice","isMetric","isVisibleFindLocationInput","isAutoGeolocation","currData","setCurrData","curr","current","getDataObj","last_updated","setVisionFindLocationInput","isVisFindLoc","setForecastData","fCast","time","updTimeStamp","forecast","forecastday","forEach","ar","hour","ar1","Date","getTime","setCurrDayData","currDay","setMetric","setAutoGeolocation","isDay","formatOptions","weekday","undefined","minute","temp_c","Math","round","avgtemp_c","temp_f","avgtemp_f","icon","condition","precip_mm","totalprecip_mm","humidity","avghumidity","wind_kph","maxwind_kph","wind_mph","maxwind_mph","country","location","text","updTime","Intl","DateTimeFormat","format","AutoLocationIcon","size","fill","xmlns","style","margin","width","height","viewBox","d","UseFindLocation","dispatch","useDispatch","hideFindLocationEvent","ev","target","closest","hideFindLocationInput","document","removeEventListener","fetchNewWeather","value","onChangeInputFindLocation","length","showFindLocationsInput","setTimeout","addEventListener","CurrentWeather","useSelector","currWeather","useEffect","className","classes","leftCol","src","alt","temp","btns","disabled","onClick","btn","active","vertLine","other","rightCol","findWrapper","findInput","onChange","placeholder","type","findList","map","findItem","id","btnFindLoc","graphSlice","dataXY","typeY","tickValues","slideGraphicsPx","minY","getXY","push","wind_degree","getArrHours","currHour","getHours","ind","i","j","setCurrUpdTime","setType","setSlideGraphics","currTime","lastUpdTime","res","getMinY","reduce","min","cur","resetGraphicsStates","getVisualY","TypeBtns","graphics","handleClick","e","includes","console","log","parentElement","querySelectorAll","button","classList","add","WindArrow","x","dx","y","datum","isVisible","version","enableBackground","transformOrigin","transform","points","LabelAxis","props","fontSize","UseGraphics","addPostfix","hourX","chartsStyles","VictoryAxis","tickLabels","fontFamily","axis","stroke","VictoryArea","strokeWidth","labels","fontWeight","cursor","LabelComponent","dy","useGraphics","vectorEffect","setMinutes","WeatherGraphic","padding","bottom","top","left","right","domainPadding","containerComponent","transition","responsive","crossAxis","tickFormat","t","tickLabelComponent","dataComponent","labelComponent","y0","interpolation","DaysBtns","addBtns","day","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","getDate","btnDay","date","isSameDay","nums","num","roundNums","contains","b","remove","handlerClick","App","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","err","enableHighAccuracy","timeout","maximumAge","color","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.972a25e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"CurrentWeather_current__3eoIk\",\"leftCol\":\"CurrentWeather_leftCol__3OQxZ\",\"temp\":\"CurrentWeather_temp__3W1Vd\",\"btns\":\"CurrentWeather_btns__AZ7d7\",\"btn\":\"CurrentWeather_btn__Oh3m-\",\"active\":\"CurrentWeather_active__tCyXI\",\"vertLine\":\"CurrentWeather_vertLine__3lqeN\",\"other\":\"CurrentWeather_other__quPtP\",\"rightCol\":\"CurrentWeather_rightCol__t55u-\",\"btnFindLoc\":\"CurrentWeather_btnFindLoc__1LIEj\",\"location\":\"CurrentWeather_location__pkGnp\",\"findInput\":\"CurrentWeather_findInput__3L8z8\",\"findWrapper\":\"CurrentWeather_findWrapper__1a7QJ\",\"findList\":\"CurrentWeather_findList__QGo5A\",\"findItem\":\"CurrentWeather_findItem__aoEil\"};","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst fetchWeather = createAsyncThunk(\r\n\t\t'data/fetchWeather',\r\n\t\tasync function (pos, {rejectWithValue}) {\r\n\t\t\tconst [lat, lon] = pos\r\n\t\t\t// const url = `http://api.weatherapi.com/v1/forecast.json?key=b8d348df879e486ca0f172620210610&q=48.86,2.35&days=8`\r\n\t\t\tconst url = `https://api.weatherapi.com/v1/forecast.json?key=b8d348df879e486ca0f172620210610&q=${lat},${lon}&days=8&lang=ru`\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url)\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Server Error!')\r\n\t\t\t\t}\r\n\t\t\t\treturn await response.json()\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn rejectWithValue(e.message)\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nconst fetchLocation = createAsyncThunk(\r\n\t\t'data/fetchLocation',\r\n\t\tasync function (word, {rejectWithValue}) {\r\n\t\t\tconst url = `https://api.weatherapi.com/v1/search.json?key=b8d348df879e486ca0f172620210610&q=${word}`\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url)\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Server Error!')\r\n\t\t\t\t}\r\n\t\t\t\treturn await response.json()\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn rejectWithValue(e.message)\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nconst dataSlice = createSlice({\r\n\tname: 'data',\r\n\tinitialState: {\r\n\t\tdata: {},\r\n\t\tlistFindLocations: [],\r\n\t\tstatusFetchLocation: null,\r\n\t\terror: null,\r\n\t\tstatusFetchWeather: null,\r\n\t},\r\n\treducers: {\r\n\r\n\t},\r\n\textraReducers: {\r\n\t\t[fetchWeather.pending]: (state, action) => {\r\n\t\t\tstate.statusFetchWeather = 'loading'\r\n\t\t},\r\n\t\t[fetchWeather.fulfilled]: (state, action) => {\r\n\t\t\tstate.data = action.payload\r\n\t\t\tstate.statusFetchWeather = 'ok'\r\n\t\t},\r\n\t\t[fetchWeather.rejected]: (state, action) => {\r\n\t\t\tstate.error = action.payload\r\n\t\t\tstate.statusFetchWeather = 'rejected'\r\n\t\t},\r\n\t\t[fetchLocation.pending]: (state, action) => {\r\n\t\t\tstate.statusFetchLocation = 'loading'\r\n\t\t},\r\n\t\t[fetchLocation.fulfilled]: (state, action) => {\r\n\t\t\tstate.listFindLocations = action.payload\r\n\t\t\tstate.statusFetchLocation = 'ok'\r\n\t\t},\r\n\t\t[fetchLocation.rejected]: (state, action) => {\r\n\t\t\tstate.error = action.payload\r\n\t\t\tstate.statusFetchLocation = 'rejected'\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const {setStatusFind} = dataSlice.actions\r\nexport {fetchWeather, fetchLocation}\r\nexport default dataSlice.reducer","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst currWeatherSlice = createSlice({\r\n\t\t\tname: 'currWeather',\r\n\t\t\tinitialState: {\r\n\t\t\t\tisMetric: true,\r\n\t\t\t\tisVisibleFindLocationInput: false,\r\n\t\t\t\tisAutoGeolocation: false,\r\n\t\t\t\tcurrData: {},\r\n\t\t\t},\r\n\t\t\treducers: {\r\n\t\t\t\tsetCurrData(state, action) {\r\n\t\t\t\t\tconst {data} = action.payload\r\n\t\t\t\t\tconst curr = data.current;\r\n\t\t\t\t\tstate.currData = getDataObj(data, curr, curr.last_updated)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetVisionFindLocationInput(state, action) {\r\n\t\t\t\t\tif (typeof action.payload === \"boolean\") {\r\n\t\t\t\t\t\tstate.isVisibleFindLocationInput = action.payload\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstate.isVisibleFindLocationInput = !state.isVisFindLoc\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetForecastData(state, action) {\r\n\t\t\t\t\tconst [time, data] = action.payload\r\n\t\t\t\t\tif (state.currData.updTimeStamp === time) return\r\n\r\n\t\t\t\t\tlet fCast\r\n\t\t\t\t\tdata.forecast.forecastday.forEach((ar) => ar.hour.forEach((ar1) => {\r\n\t\t\t\t\t\tif (new Date(ar1.time).getTime() === time) {\r\n\t\t\t\t\t\t\tfCast = ar1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tstate.currData = getDataObj(data, fCast, fCast.time)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetCurrDayData(state, action) {\r\n\t\t\t\t\tconst [time, currDay, data] = action.payload\r\n\t\t\t\t\tif (state.currData.updTimeStamp === time) return\r\n\t\t\t\t\tstate.currData = getDataObj(data, currDay, time, true)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMetric(state, action) {\r\n\t\t\t\t\tstate.isMetric = action.payload\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetAutoGeolocation(state, action) {\r\n\t\t\t\t\tstate.isAutoGeolocation = action.payload\r\n\t\t\t\t},\r\n\r\n\t\t\t}\r\n\t\t}\r\n)\r\n\r\nfunction getDataObj(data, curr, last_updated, isDay = false) {\r\n\r\n\tconst formatOptions = {\r\n\t\tweekday: 'long',\r\n\t\thour: isDay ? undefined : 'numeric',\r\n\t\tminute: isDay ? undefined : 'numeric'\r\n\t}\r\n\r\n\treturn {\r\n\t\ttemp_c: Math.round(isDay ? curr.avgtemp_c : curr.temp_c),\r\n\t\ttemp_f: Math.round(isDay ? curr.avgtemp_f : curr.temp_f),\r\n\t\ticon: curr.condition.icon,\r\n\t\tprecip_mm: isDay ? curr.totalprecip_mm : curr.precip_mm,\r\n\t\thumidity: isDay ? curr.avghumidity : curr.humidity,\r\n\t\twind_kph: Math.round(isDay ? curr.maxwind_kph : curr.wind_kph),\r\n\t\twind_mph: Math.round(isDay ? curr.maxwind_mph : curr.wind_mph),\r\n\t\tcountry: data.location.country,\r\n\t\tname: data.location.name,\r\n\t\ttext: curr.condition.text,\r\n\t\tupdTime: new Intl.DateTimeFormat('ru-RU', formatOptions)\r\n\t\t\t\t.format(new Date(last_updated)),\r\n\t\tupdTimeStamp: new Date(last_updated).getTime()\r\n\t}\r\n}\r\n\r\nexport const {\r\n\tsetAutoGeolocation,\r\n\tsetVisionFindLocationInput,\r\n\tsetCurrData,\r\n\tsetForecastData,\r\n\tsetMetric,\r\n\tsetCurrDayData\r\n} = currWeatherSlice.actions\r\nexport default currWeatherSlice.reducer","import React from 'react';\r\n\r\nconst AutoLocationIcon = ({size = 24, fill = '#fbbc04'}) => {\r\n\r\n\treturn (\r\n\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tstyle={{margin: '0 10px 0 0'}}\r\n\t\t\t\t\twidth={size}\r\n\t\t\t\t\theight={size}\r\n\t\t\t\t\tviewBox=\"0 0 24 24\">\r\n\t\t\t\t<path fill={fill}\r\n\t\t\t\t\t\t\td=\"M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 11c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z\"/>\r\n\t\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default AutoLocationIcon;\r\n\r\n\r\n","import {fetchLocation, fetchWeather} from \"../store/dataSlice\";\r\nimport {setAutoGeolocation, setVisionFindLocationInput} from \"../store/currWeatherSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst UseFindLocation = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction onChangeInputFindLocation(word) {\r\n\t\tif (word.length > 2) dispatch(fetchLocation(word))\r\n\t}\r\n\r\n\tfunction hideFindLocationEvent(ev) {\r\n\t\tif (ev.target.closest('.js-findWrapper')) return\r\n\t\thideFindLocationInput()\r\n\t}\r\n\r\n\tfunction hideFindLocationInput() {\r\n\t\tdispatch(setVisionFindLocationInput(false))\r\n\t\tdocument.removeEventListener('click', hideFindLocationEvent)\r\n\t}\r\n\r\n\tfunction fetchNewWeather(ev, lat, lon) {\r\n\t\tdispatch(fetchWeather([lat, lon]))\r\n\t\tev.target.value = ''\r\n\t\thideFindLocationInput()\r\n\t\tdispatch(setAutoGeolocation(false))\r\n\t}\r\n\r\n\tfunction showFindLocationsInput() {\r\n\t\tdispatch(setVisionFindLocationInput(true))\r\n\t\tsetTimeout(() => {\r\n\t\t\tdocument.addEventListener('click', hideFindLocationEvent)\r\n\t\t})\r\n\t}\r\n\r\n\treturn\t{\r\n\t\tfetchNewWeather,\r\n\t\thideFindLocationEvent,\r\n\t\tonChangeInputFindLocation,\r\n\t\tshowFindLocationsInput,\r\n\t\thideFindLocationInput\r\n\t\t}\r\n}\r\n\r\nexport default UseFindLocation;","import React, {useEffect} from 'react';\r\nimport classes from './CurrentWeather.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrData, setMetric} from \"../../store/currWeatherSlice\";\r\nimport AutoLocationIcon from \"./AutoLocationIcon\";\r\nimport UseFindLocation from \"../../hooks/useFindLocation\";\r\n\r\nconst CurrentWeather = () => {\r\n\r\n\tconst {isAutoGeolocation, isVisibleFindLocationInput, isMetric, currData}\r\n\t\t\t= useSelector(state => state.currWeather)\r\n\tconst {temp_c, temp_f, icon, precip_mm, humidity, wind_kph,\r\n\t\twind_mph, country, name, text, updTime}\r\n\t\t\t= currData\r\n\r\n\tconst {data, listFindLocations, error, statusFetchLocation}\r\n\t\t\t= useSelector(state => state.data)\r\n\r\n\tconst {fetchNewWeather,\tonChangeInputFindLocation,showFindLocationsInput,}\r\n\t\t\t= UseFindLocation()\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setCurrData({data}))\r\n\t}, [data])\r\n\r\n\treturn (\r\n\t\t\t<div className={classes.current}>\r\n\t\t\t\t<div className={classes.leftCol}>\r\n\t\t\t\t\t<img width={64} height={64} src={icon} alt=\"weather icon\"/>\r\n\t\t\t\t\t<span className={classes.temp}>{isMetric ? temp_c : temp_f}</span>\r\n\t\t\t\t\t<div className={classes.btns}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={isMetric}\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setMetric(true))}\r\n\t\t\t\t\t\t\t\tclassName={`${classes.btn} ${isMetric ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t&deg;C\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span className={classes.vertLine}>|</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={!isMetric}\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setMetric(false))}\r\n\t\t\t\t\t\t\t\tclassName={`${classes.btn} ${!isMetric ? classes.active : ''}`}>\r\n\t\t\t\t\t\t\t&deg;F\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul className={classes.other}>\r\n\t\t\t\t\t\t<li>Осадки: {precip_mm} мм</li>\r\n\t\t\t\t\t\t<li>Влажность: {humidity}%</li>\r\n\t\t\t\t\t\t<li>Ветер: {isMetric ? `${wind_kph} км/ч` : `${wind_mph} ми/ч`}</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.rightCol}>\r\n\t\t\t\t\t{isVisibleFindLocationInput && !error\r\n\t\t\t\t\t\t\t? <div className={`${classes.findWrapper} js-findWrapper`}>\r\n\t\t\t\t\t\t\t\t<input className={classes.findInput}\r\n\t\t\t\t\t\t\t\t\t\t\t onChange={ev => onChangeInputFindLocation(ev.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t placeholder={'Город (от 3 символов) ...'}\r\n\t\t\t\t\t\t\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t name=\"country-name\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ul className={classes.findList}>\r\n\t\t\t\t\t\t\t\t\t{listFindLocations.length > 0 && statusFetchLocation === 'ok' &&\r\n\t\t\t\t\t\t\t\t\tlistFindLocations.map(location => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li className={classes.findItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(ev) => fetchNewWeather(ev, location.lat, location.lon)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={location.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{location.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t{listFindLocations.length === 0 && statusFetchLocation === 'ok' &&\r\n\t\t\t\t\t\t\t\t\t<li className={classes.findItem}>Не найдено</li>}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t: <button\r\n\t\t\t\t\t\t\t\t\tonClick={showFindLocationsInput}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.btnFindLoc}>\r\n\t\t\t\t\t\t\t\t{isAutoGeolocation && <AutoLocationIcon size={20}/>}\r\n\t\t\t\t\t\t\t\t<h1 className={classes.location}>{country}, {name}</h1>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{updTime}</span>\r\n\t\t\t\t\t<span>{text}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CurrentWeather;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst defStates = {\r\n\tdataXY: [],\r\n\ttypeY: 'temp_c',\r\n\ttickValues: [],\r\n\tlast_updated: null,\r\n\tslideGraphicsPx: null,\r\n\tminY: -1,\r\n}\r\n\r\nconst graphSlice = createSlice({\r\n\tname: 'graph',\r\n\tinitialState: defStates,\r\n\treducers: {\r\n\r\n\t\tgetXY(state, action) {\r\n\t\t\tstate.dataXY.length = 0\r\n\t\t\tfor (const day of action.payload.data.forecast.forecastday) {\r\n\t\t\t\tday.hour.forEach((hour) => {\r\n\t\t\t\t\tstate.dataXY.push({\r\n\t\t\t\t\t\ttime: new Date(hour.time).getTime(),\r\n\t\t\t\t\t\ttemp_c: Math.round(hour.temp_c),\r\n\t\t\t\t\t\ttemp_f: Math.round(hour.temp_f),\r\n\t\t\t\t\t\thumidity: Math.round(hour.humidity),\r\n\t\t\t\t\t\twind_kph: Math.round(hour.wind_kph),\r\n\t\t\t\t\t\twind_mph: Math.round(hour.wind_mph),\r\n\t\t\t\t\t\twind_degree: hour.wind_degree,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetArrHours(state, action) {\r\n\t\t\tstate.tickValues.length = 0\r\n\t\t\tlet currHour = new Date(state.last_updated).getHours()\r\n\t\t\t++currHour\r\n\r\n\t\t\tstate.dataXY.forEach((ar, ind) => {\r\n\t\t\t\tfor (let i = currHour; i < 75; i += 3) {\r\n\t\t\t\t\tif (ind === i) state.tickValues.push(ar.time)\r\n\t\t\t\t\tfor (let j = currHour; j >= 0; j -= 3) {\r\n\t\t\t\t\t\tif (ind === j) state.tickValues.push(ar.time)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tsetCurrUpdTime(state, action) {\r\n\t\t\tstate.last_updated = action.payload.data.current.last_updated\r\n\t\t},\r\n\r\n\t\tsetType(state, action) {\r\n\t\t\tstate.typeY = action.payload\r\n\t\t},\r\n\r\n\t\tsetSlideGraphics(state, action) {\r\n\r\n\t\t\tif (state.dataXY.length) {\r\n\t\t\t\tconst time = action.payload\r\n\t\t\t\tlet currTime = new Date(time).getTime()\r\n\t\t\t\tlet lastUpdTime = new Date(state.last_updated).getTime()\r\n\t\t\t\tif (currTime < lastUpdTime) currTime = lastUpdTime\r\n\t\t\t\tconst firstTime = state.dataXY[0].time\r\n\t\t\t\tlet res = (((currTime - firstTime) / 3600000) - 2.9) * 650 / 24\r\n\t\t\t\tif (res > 1275) res = 1275\r\n\t\t\t\tif (res < 0) res = 0\r\n\r\n\t\t\t\tstate.slideGraphicsPx = res\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetMinY(state, action) {\r\n\t\t\tstate.minY = state.dataXY.reduce((min, cur) => {\r\n\t\t\t\tif (min >= cur[state.typeY]) min = (cur[state.typeY] - 1)\r\n\t\t\t\treturn min\r\n\t\t\t}, -1)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const {\r\n\tresetGraphicsStates,\r\n\tgetXY,\r\n\tsetSlideGraphics,\r\n\tgetArrHours,\r\n\tgetVisualY,\r\n\tsetCurrUpdTime,\r\n\tsetType,\r\n\tgetMinY\r\n} = graphSlice.actions\r\n\r\nexport default graphSlice.reducer","import React from 'react';\r\nimport {setType} from \"../../store/graphSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst TypeBtns = () => {\r\n\r\n\tconst {isMetric} = useSelector(state => state.currWeather)\r\n\tconst {typeY} = useSelector(state => state.graphics)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction handleClick(type, e) {\r\n\t\tif (typeY === type) return\r\n\t\tif (typeY.includes(`${type}`)) return\r\n\t\tconsole.log('handleClick')\r\n\r\n\t\te.target.parentElement.querySelectorAll('button')\r\n\t\t\t\t.forEach(button => button.className = '')\r\n\t\te.target.classList.add('active')\r\n\r\n\t\tif (type === 'temp') {\r\n\t\t\tdispatch(setType(`${isMetric ? 'temp_c' : 'temp_f'}`))\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (type === 'wind') {\r\n\t\t\tdispatch(setType(`${isMetric ? 'wind_kph' : 'wind_mph'}`))\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdispatch(setType(type))\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={'type-btns'}>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={'active'}\r\n\t\t\t\t\t\tonClick={(e) => handleClick('temp', e)}>\r\n\t\t\t\t\tТемпература\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={'vert-line'}>|</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={(e) => handleClick('humidity', e)}>\r\n\t\t\t\t\tВлажность\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={'vert-line'}>|</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={(e) => handleClick('wind', e)}>\r\n\t\t\t\t\tВетер\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TypeBtns;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst WindArrow = ({x, y, dx, datum}) => {\r\n\r\n\tconst {tickValues} = useSelector(state => state.graphics)\r\n\tlet {wind_degree, wind_kph} = datum\r\n\tconst isVisible = tickValues.includes(datum.time)\r\n\r\n\tif (wind_kph < 10) wind_kph = 10\r\n\r\n\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{isVisible && <svg x={(x - (wind_kph + 5) / 2) + dx} y={53}>\r\n\t\t\t\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tx=\"0px\" y=\"0px\" width={`${wind_kph}px`} height=\"42px\"\r\n\t\t\t\t\tviewBox=\"0 0 42 42\" enableBackground=\"new 0 0 42 42\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<polygon\r\n\t\t\t\t\tfill=\"#AEBFCF\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\ttransformOrigin: '50% 50%',\r\n\t\t\t\t\ttransform: `rotate(${wind_degree - 90}deg)`,\r\n\t\t\t\t}}\r\n\t\t\t\t\tpoints=\"27,37.5 42,20 27,4.5 18,4.5 30,16.5 0,16.5 0,23.5 30,23.5 18,37.5 \"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WindArrow;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setForecastData} from \"../../store/currWeatherSlice\";\r\n\r\nconst LabelAxis = (props) => {\r\n\r\n\tconst data = useSelector(state => state.data.data)\r\n\tconst dispatch = useDispatch()\r\n\r\n\treturn (\r\n\t\t\t<text\r\n\t\t\t\t\tx={props.x}\r\n\t\t\t\t\ty={props.y}\r\n\t\t\t>\r\n\t\t\t\t<tspan\r\n\t\t\t\t\t\tonClick={() => dispatch(setForecastData([props.datum, data]))}\r\n\t\t\t\t\t\tstyle={{fontSize: 12, fill: '#70757a'}}\r\n\t\t\t\t\t\tx={props.x}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</tspan>\r\n\t\t\t</text>\r\n\t);\r\n};\r\n\r\nexport default LabelAxis;","import {useSelector} from \"react-redux\";\r\n\r\nconst UseGraphics = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {typeY} = useSelector(state => state.graphics)\r\n\r\n\tfunction getVisualY(datum) {\r\n\r\n\t\tfunction addPostfix() {\r\n\t\t\tif (typeY.includes('temp')) return datum[typeY]\r\n\r\n\t\t\tswitch (typeY) {\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn datum[typeY]\r\n\t\t\t\tcase 'humidity':\r\n\t\t\t\t\treturn `${datum[typeY]}%`;\r\n\t\t\t\tcase 'wind_kph':\r\n\t\t\t\t\treturn `${datum[typeY]} км/ч`;\r\n\t\t\t\tcase 'wind_mph':\r\n\t\t\t\t\treturn `${datum[typeY]} ми/ч`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currHour = new Date(data.current.last_updated).getHours()\r\n\t\tlet hourX = new Date(datum.time).getHours()\r\n\r\n\t\tif (!typeY.includes('temp')) ++currHour\r\n\r\n\t\tfor (let i = currHour; i < 27; i += 3) {\r\n\t\t\tif (hourX === i) {\r\n\t\t\t\treturn addPostfix()\r\n\t\t\t}\r\n\t\t\tfor (let j = currHour; j >= 0; j -= 3) {\r\n\t\t\t\tif (hourX === j) {\r\n\t\t\t\t\treturn addPostfix()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst chartsStyles = {\r\n\t\tVictoryAxis: {\r\n\t\t\ttickLabels: {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\tfill: '#70757a',\r\n\t\t\t},\r\n\t\t\taxis: {stroke: null},\r\n\t\t},\r\n\t\tVictoryArea: {\r\n\t\t\tdata: {\r\n\t\t\t\tfill: `${typeY === 'humidity' ? \"#e8f0fe\" : '#fff5cc'}`,\r\n\t\t\t\tstroke: `${typeY === 'humidity' ? '#1a73e8' : \"#ffcc00\"}`,\r\n\t\t\t\tstrokeWidth: 2,\r\n\t\t\t},\r\n\t\t\tlabels: {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 11,\r\n\t\t\t\tfontWeight: 700,\r\n\t\t\t\tfill: `${typeY === 'humidity' ? '#1a73e8' : 'rgb(181, 181, 181)'}`,\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn {getVisualY, chartsStyles};\r\n};\r\n\r\nexport default UseGraphics;\r\n\r\n","import React from 'react';\r\nimport {setForecastData} from \"../../store/currWeatherSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useGraphics from \"../../hooks/useGraphics\";\r\n\r\nconst LabelComponent = (props) => {\r\n\tconst {datum, x, dx, y, dy, style} = props;\r\n\r\n\tconst data = useSelector(state => state.data.data)\r\n\tconst {currData} = useSelector(state => state.currWeather)\r\n\tconst dispatch = useDispatch()\r\n\tconst {getVisualY} = useGraphics()\r\n\r\n\treturn (\r\n\t\t\t<g\r\n\t\t\t\t\tonClick={() => dispatch(setForecastData([datum.time, data]))}\r\n\t\t\t\t\tstyle={style}\r\n\t\t\t\t\tx={x}\r\n\t\t\t\t\ty={getVisualY(datum)}\r\n\t\t\t>\r\n\t\t\t\t<rect\r\n\t\t\t\t\t\tvectorEffect=\"non-scaling-stroke\"\r\n\t\t\t\t\t\theight=\"85\" width={650 / 24}\r\n\t\t\t\t\t\tx={x}\r\n\t\t\t\t\t\tfill={'transparent'}\r\n\t\t\t\t\t\ty={y - 25}\r\n\t\t\t\t/>\r\n\t\t\t\t<text\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfill: new Date(currData.updTimeStamp).setMinutes(0) === datum.time\r\n\t\t\t\t\t\t\t\t\t? 'rgb(85, 85, 85)'\r\n\t\t\t\t\t\t\t\t\t: \"inherit\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tx={x + dx}\r\n\t\t\t\t\t\ty={y}\r\n\t\t\t\t\t\tdy={dy}\r\n\t\t\t\t>\r\n\t\t\t\t\t<tspan>\r\n\t\t\t\t\t\t{getVisualY(datum)}\r\n\t\t\t\t\t</tspan>\r\n\t\t\t\t</text>\r\n\t\t\t</g>\r\n\t);\r\n};\r\n\r\nexport default LabelComponent;","import React, {useEffect} from 'react';\r\nimport {VictoryArea, VictoryAxis, VictoryChart, VictoryContainer, VictoryLabel, VictoryScatter} from \"victory\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getArrHours, getMinY, getXY, setCurrUpdTime, setSlideGraphics, setType} from \"../../store/graphSlice\";\r\nimport WindArrow from \"./WindArrow\";\r\nimport LabelAxis from \"./LabelAxis\";\r\nimport useGraphics from \"../../hooks/useGraphics\";\r\nimport LabelComponent from \"./LabelComponent\";\r\n\r\nconst WeatherGraphic = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {dataXY, slideGraphicsPx, typeY, tickValues, minY} =\r\n\t\t\tuseSelector(state => state.graphics)\r\n\tconst {isMetric} = useSelector(state => state.currWeather)\r\n\tconst dispatch = useDispatch()\r\n\tconst {getVisualY, chartsStyles} = useGraphics()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getXY({data}))\r\n\t\tdispatch(setCurrUpdTime({data}))\r\n\t\tdispatch(getArrHours())\r\n\t\tdispatch(setSlideGraphics(data.current.last_updated))\r\n\t}, [data])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (typeY.includes('temp')) {\r\n\t\t\tdispatch(setType(`${isMetric ? 'temp_c' : 'temp_f'}`))\r\n\t\t}\r\n\t\tif (typeY.includes('wind')) {\r\n\t\t\tdispatch(setType(`${isMetric ? 'wind_kph' : 'wind_mph'}`))\r\n\t\t}\r\n\t}, [isMetric])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getMinY())\r\n\t}, [dataXY])\r\n\r\n\treturn (\r\n\t\t\t<VictoryChart\r\n\t\t\t\t\twidth={1925}\r\n\t\t\t\t\theight={125}\r\n\t\t\t\t\tpadding={{bottom: 20, top: 25, left: 0, right: 0}}\r\n\t\t\t\t\tdomainPadding={{y: [15, 25]}}\r\n\t\t\t\t\tcontainerComponent={\r\n\t\t\t\t\t\t<VictoryContainer\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttransform: `translateX(-${slideGraphicsPx}px)`,\r\n\t\t\t\t\t\t\t\t\ttransition: 'all 1000ms cubic-bezier(.51,-0.17,0,1)'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tresponsive={false}/>}\r\n\t\t\t>\r\n\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\tname='VictoryAxis'\r\n\t\t\t\t\t\tcrossAxis={false}\r\n\t\t\t\t\t\ttickValues={tickValues}\r\n\t\t\t\t\t\ttickFormat={(t) => `${new Date(t).getHours()}:00`}\r\n\t\t\t\t\t\tstyle={chartsStyles.VictoryAxis}\r\n\t\t\t\t\t\ttickLabelComponent={<LabelAxis y={123}/>}\r\n\t\t\t\t/>\r\n\t\t\t\t{typeY.includes('wind')\r\n\t\t\t\t\t\t? <VictoryScatter\r\n\t\t\t\t\t\t\t\tname='windChart'\r\n\t\t\t\t\t\t\t\tdata={dataXY}\r\n\t\t\t\t\t\t\t\tx='time'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\t\tfontFamily: '\"Arial\", sans-serif',\r\n\t\t\t\t\t\t\t\t\t\tfontSize: 12, stroke: undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabels={({datum}) => getVisualY(datum)}\r\n\t\t\t\t\t\t\t\tdataComponent={<WindArrow dx={15}/>}\r\n\t\t\t\t\t\t\t\tlabelComponent={\r\n\t\t\t\t\t\t\t\t\t<VictoryLabel dx={15} y={35}/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: <VictoryArea\r\n\t\t\t\t\t\t\t\tname='chart'\r\n\t\t\t\t\t\t\t\ty0={() => minY}\r\n\t\t\t\t\t\t\t\tinterpolation={typeY === 'humidity' ? 'step' : 'basis'}\r\n\t\t\t\t\t\t\t\tstyle={chartsStyles.VictoryArea}\r\n\t\t\t\t\t\t\t\tdata={dataXY}\r\n\t\t\t\t\t\t\t\tx='time'\r\n\t\t\t\t\t\t\t\ty={typeY}\r\n\t\t\t\t\t\t\t\tlabels={({datum}) => getVisualY(datum)}\r\n\t\t\t\t\t\t\t\tlabelComponent={\r\n\t\t\t\t\t\t\t\t\t<LabelComponent\r\n\t\t\t\t\t\t\t\t\t\t\ty={typeY.includes('temp') ? undefined : 45}\r\n\t\t\t\t\t\t\t\t\t\t\tdx={typeY.includes('temp') ? 8 : 2}\r\n\t\t\t\t\t\t\t\t\t\t\tdy={-10}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</VictoryChart>\r\n\t);\r\n};\r\n\r\n\r\nexport default WeatherGraphic;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrDayData} from \"../../store/currWeatherSlice\";\r\nimport {setSlideGraphics} from \"../../store/graphSlice\";\r\n\r\nconst DaysBtns = () => {\r\n\r\n\tconst {data} = useSelector(state => state.data)\r\n\tconst {currData, isMetric} = useSelector(state => state.currWeather)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tfunction handlerClick(e, btnDay, isSameDay) {\r\n\t\tif (isSameDay) return\r\n\r\n\t\tconst btn = e.target.closest('button')\r\n\r\n\t\tif (!btn.classList.contains('active')) {\r\n\t\t\tbtn.parentElement.querySelectorAll('button')\r\n\t\t\t\t\t.forEach(b => b.classList.remove('active'))\r\n\t\t\tbtn.classList.add('active')\r\n\t\t}\r\n\r\n\t\tdispatch(setSlideGraphics(btnDay.date))\r\n\t\tdispatch(setCurrDayData([btnDay.date, btnDay.day, data]))\r\n\t}\r\n\r\n\tfunction roundNums(...nums) {\r\n\t\treturn (nums.map(num => Math.round(num)))\r\n\t}\r\n\r\n\tfunction addBtns(btn) {\r\n\t\tlet {maxtemp_c, maxtemp_f, mintemp_c, mintemp_f} = btn.day\r\n\t\tconst {icon, text} = btn.day.condition\r\n\t\tconst currDay = new Date(currData.updTimeStamp).getDate()\r\n\t\tconst btnDay = new Date(btn.date).getDate();\r\n\t\tconst isSameDay = currDay === btnDay;\r\n\r\n\t\t[maxtemp_c, maxtemp_f, mintemp_c, mintemp_f] = roundNums(maxtemp_c, maxtemp_f, mintemp_c, mintemp_f)\r\n\r\n\t\treturn (\r\n\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={e => handlerClick(e, btn, isSameDay)}\r\n\t\t\t\t\t\tclassName={`day-btn ${currDay === btnDay ? 'active' : ''}`}\r\n\t\t\t\t\t\tkey={btn.date}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div> {\r\n\t\t\t\t\t\tnew Intl.DateTimeFormat('ru-RU',\r\n\t\t\t\t\t\t\t\t{weekday: 'short'})\r\n\t\t\t\t\t\t\t\t.format(new Date(btn.date))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img width={64} height={64} src={icon} alt={text}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<span>  {`${isMetric ? maxtemp_c : maxtemp_f}`}&deg; </span>\r\n\t\t\t\t\t<span className={'day-btn__f'}>{`${isMetric ? mintemp_c : mintemp_f}`}&deg;</span>\r\n\t\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className=\"day-btns\">\r\n\t\t\t\t{data.forecast.forecastday\r\n\t\t\t\t\t\t.map(btn => addBtns(btn))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DaysBtns;","import 'normalize.css'\nimport './App.css';\nimport {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchWeather} from \"./store/dataSlice\";\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport TypeBtns from \"./components/TypeBtns/TypeBtns\";\nimport WeatherGraphic from \"./components/WeatherGraphic/WeatherGraphic\";\nimport DaysBtns from \"./components/DaysBtns/DaysBtns\";\nimport {setAutoGeolocation} from \"./store/currWeatherSlice\";\n\nfunction App() {\n\tconst {error, statusFetchWeather} = useSelector(state => state.data)\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t(pos) => {\n\t\t\t\t\tdispatch(fetchWeather([pos.coords.latitude, pos.coords.longitude]))\n\t\t\t\t\tdispatch(setAutoGeolocation(true))\n\t\t\t\t},\n\t\t\t\t(err) =>\n\t\t\t\t\t\tdispatch(fetchWeather([34.052235, -118.243683])), //Los angeles\n\t\t\t\t{\n\t\t\t\t\t\tenableHighAccuracy: true,\n\t\t\t\t\t\ttimeout: 5000,\n\t\t\t\t\t\tmaximumAge: 0\n\t\t\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{statusFetchWeather === 'loading' && <h2>Loading..</h2>}\n\t\t\t\t{error && <h2 style={{color: 'red'}}>Ошибка: {error}</h2>}\n\t\t\t\t{statusFetchWeather === 'ok' && !error &&\n\t\t\t\t<div className={'container'}>\n\t\t\t\t\t<CurrentWeather/>\n\t\t\t\t\t<TypeBtns/>\n\t\t\t\t\t<div className={'charts'}>\n\t\t\t\t\t\t<WeatherGraphic/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DaysBtns/>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t);\n}\n\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport graphSlice from \"./graphSlice\";\r\nimport dataSlice from './dataSlice'\r\nimport currWeatherSlice from \"./currWeatherSlice\";\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tdata: dataSlice,\r\n\t\tgraphics: graphSlice,\r\n\t\tcurrWeather: currWeatherSlice,\r\n\t}\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nimport {Provider} from \"react-redux\";\nimport store from './store'\n\nReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App/>\n\t\t\t</Provider>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n);"],"sourceRoot":""}